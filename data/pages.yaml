home:
  html: |
    <div class="hero" style="display:flex; justify-content:center;">
      <video src="/kamui-code-docs/videos/pixverse_subtitles.mp4" controls autoplay muted playsinline loop style="width:100%; max-width:1080px; border-radius:16px; box-shadow: 0 12px 32px rgba(0,0,0,0.12); border:1px solid var(--border);"></video>
    </div>

    <div class="cards-grid">
        <div class="card creative" onclick="navigateTo('playlist-creative')">
            <div class="card-header">
                <h2 class="card-title">Creative tools</h2>
                <p class="card-subtitle">生成・編集ツール</p>
            </div>
            <span class="card-tag"> クリエイティブ</span>
            <p class="card-content">
                画像生成、動画生成、音声生成など<br>
                クリエイティブツールのMCPサーバー
            </p>
            <span class="card-icon"></span>
        </div>
        
        <div class="card development" onclick="navigateTo('playlist-development')">
            <div class="card-header">
                <h2 class="card-title">Development</h2>
                <p class="card-subtitle">生成・編集ツール</p>
            </div>
            <span class="card-tag"> クリエイティブ</span>
            <p class="card-content">
                開発ツール、CI/CD、テスト自動化など<br>
                開発向けMCPサーバー
            </p>
            <span class="card-icon">💻</span>
        </div>
        
        <div class="card business" onclick="navigateTo('playlist-business')">
            <div class="card-header">
                <h2 class="card-title">Business</h2>
                <p class="card-subtitle">生成・編集ツール</p>
            </div>
            <span class="card-tag"> クリエイティブ</span>
            <p class="card-content">
                要件定義、ストーリーボード、<br>
                ビジネス文書生成のMCPサーバー
            </p>
            <span class="card-icon">💼</span>
        </div>
    </div>
    
    <div style="margin-top: 48px;">
        <h2 style="text-align: center; margin-bottom: 32px; color: var(--text);">MCPワークフロー</h2>
        <div style="display: flex; justify-content: center; margin-bottom: 32px;">
            <div class="card workflow" onclick="navigateTo('workflow-all')" style="max-width: 600px;">
                <div class="card-header">
                    <h2 class="card-title">Workflow</h2>
                    <p class="card-subtitle">ワークフロー自動化</p>
                </div>
                <span class="card-tag">🔄 ワークフロー</span>
                <p class="card-content">
                    複数のMCPサーバーを連携させて<br>
                    複雑なタスクを自動化するワークフロー集
                </p>
                <span class="card-icon">🔄</span>
            </div>
        </div>
    </div>

lp:
  html: |
    <h1 class="page-title">KAMUI CODE</h1>
    <p class="page-subtitle">AIを活用した次世代開発プラットフォーム</p>

    <div style="display:flex; justify-content:center; margin: 12px auto 28px;">
      <img src="/kamui-code-docs/images/kamui-gradient-soft-2.png" alt="KAMUI CODE" style="width:100%; max-width:1080px; border-radius:16px; box-shadow: 0 12px 32px rgba(0,0,0,0.12); border:1px solid var(--border);" />
    </div>

mcp-playlist:
  html: |
    <div class="page-header">
        <h1 class="page-title">MCP SaaS</h1>
        <div class="page-divider"></div>
    </div>
    
    <div class="cards-section">
        <div class="cards-grid-3col">
            <div class="card-modern creative" onclick="navigateTo('playlist-creative')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Creative tools</h2>
                        <p class="card-subtitle">生成・編集ツール</p>
                    </div>
                    <span class="card-tag"> クリエイティブ</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Imagen Generation</span>
                            <span class="code-line">generate_image(<span class="code-string">"beautiful landscape"</span>)</span>
                            <span class="code-comment"># Video Creation</span>
                            <span class="code-line">create_video(<span class="code-string">prompt</span>=<span class="code-string">"sunset timelapse"</span>)</span>
                            <span class="code-comment"># Audio Synthesis</span>
                            <span class="code-line">synthesize_voice(<span class="code-string">text</span>, <span class="code-string">voice</span>=<span class="code-string">"natural"</span>)</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb creative-orb"></div>
            </div>
            
            <div class="card-modern development" onclick="navigateTo('playlist-development')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Development</h2>
                        <p class="card-subtitle">開発支援ツール</p>
                    </div>
                    <span class="card-tag"> クリエイティブ</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Upload Assets</span>
                            <span class="code-line">upload_file(<span class="code-string">path</span>=<span class="code-string">"/assets/video.mp4"</span>)</span>
                            <span class="code-comment"># Process Media</span>
                            <span class="code-line">process_video(<span class="code-var">input_url</span>, <span class="code-var">options</span>)</span>
                            <span class="code-comment"># Analyze Content</span>
                            <span class="code-line">analyze_frames(<span class="code-var">video_id</span>)</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb development-orb"></div>
            </div>
            
            <div class="card-modern business" onclick="navigateTo('playlist-business')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Business</h2>
                        <p class="card-subtitle">生成・編集ツール</p>
                    </div>
                    <span class="card-tag"> クリエイティブ</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Requirements Generation</span>
                            <span class="code-line">generate_requirements(<span class="code-var">project</span>)</span>
                            <span class="code-comment"># 絵コンテ・ビデオコンテ Creation</span>
                            <span class="code-line">create_storyboard(<span class="code-var">script</span>)</span>
                            <span class="code-comment"># Voice Over</span>
                            <span class="code-line">narrate_content(<span class="code-var">text</span>, <span class="code-string">lang</span>=<span class="code-string">"ja"</span>)</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb business-orb"></div>
            </div>
        </div>
    </div>

# lp:
#   html: |
#     <div class="page-header">
#       <h1 class="page-title">KAMUI CODE</h1>
#       <p class="page-subtitle">AIを活用した次世代開発プラットフォーム</p>
#       <div class="page-divider"></div>
#     </div>
    
#     <div class="cards-grid">
#       <div class="card-modern creative">
#         <div class="card-content">
#           <div class="card-header">
#             <h2 class="card-title">Creative tools</h2>
#             <p class="card-subtitle">画像・動画・音声の生成</p>
#           </div>
#           <span class="card-tag"> クリエイティブ</span>
#           <div class="card-code-section">
#             <div class="code-snippet">
#               <span class="code-comment"># Image Generation</span>
#               <span class="code-line">generate_image(<span class="code-string">"beautiful landscape"</span>)</span>
#               <span class="code-comment"># Video Creation</span>
#               <span class="code-line">create_video(<span class="code-string">prompt</span>=<span class="code-string">"sunset timelapse"</span>)</span>
#             </div>
#           </div>
#         </div>
#         <div class="card-orb creative-orb"></div>
#       </div>
      
#       <div class="card-modern development">
#         <div class="card-content">
#           <div class="card-header">
#             <h2 class="card-title">Development</h2>
#             <p class="card-subtitle">開発ワークフロー自動化</p>
#           </div>
#           <span class="card-tag"> クリエイティブ</span>
#           <div class="card-code-section">
#             <div class="code-snippet">
#               <span class="code-comment"># Upload Assets</span>
#               <span class="code-line">upload_file(<span class="code-string">path</span>=<span class="code-string">"/assets/video.mp4"</span>)</span>
#               <span class="code-comment"># Process Media</span>
#               <span class="code-line">process_video(<span class="code-var">input_url</span>, <span class="code-var">options</span>)</span>
#             </div>
#           </div>
#         </div>
#         <div class="card-orb development-orb"></div>
#       </div>
      
#       <div class="card-modern business">
#         <div class="card-content">
#           <div class="card-header">
#             <h2 class="card-title">Business</h2>
#             <p class="card-subtitle">ビジネス文書自動生成</p>
#           </div>
#           <span class="card-tag"> クリエイティブ</span>
#           <div class="card-code-section">
#             <div class="code-snippet">
#               <span class="code-comment"># Requirements Generation</span>
#               <span class="code-line">generate_requirements(<span class="code-var">project</span>)</span>
#               <span class="code-comment"># 絵コンテ・ビデオコンテ Creation</span>
#               <span class="code-line">create_storyboard(<span class="code-var">script</span>)</span>
#             </div>
#           </div>
#         </div>
#         <div class="card-orb business-orb"></div>
#       </div>
#     </div>
    
welcome:
  html: |
    <div class="page-header">
      <h1 class="page-title">はじめまして</h1>
      <p class="page-subtitle">KAMUI CODEへようこそ</p>
      <div class="page-divider"></div>
    </div>
    
    <div class="content mcp-diff">
      <div style="background: var(--card); border: 1px solid var(--border); border-radius: 16px; padding: 40px; margin-bottom: 48px; text-align: center;">
        <h2 style="font-size: 28px; margin-bottom: 16px; color: var(--text);">AI技術を活用した統合開発プラットフォーム</h2>
        <p style="font-size: 16px; color: var(--text-weak); line-height: 1.8; max-width: 700px; margin: 0 auto;">
          KAMUI CODEは、画像生成、動画生成、音声合成、開発支援など、
          様々なAIサービスをMCPサーバーとして提供する統合プラットフォームです。
        </p>
      </div>
      
      
      <div style="display:flex; justify-content:center; margin: 0 auto 48px;">
        <img src="/kamui-code-docs/marketing-wheel_rev2@2x.png" alt="KAMUI CODE マップ" style="width:100%; max-width:1400px; border-radius:16px; box-shadow: 0 12px 32px rgba(0,0,0,0.12); border:1px solid var(--border);" />
      </div>
      


      <h2 style="margin-bottom: 32px;">はじめ方</h2>
      
      <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 32px; margin-bottom: 24px; position: relative;">
        <div style="position: absolute; top: -14px; left: 28px; width: 36px; height: 36px; background: #6366f1; color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-weight: 600; font-size: 18px;">1</div>
        <h3 style="font-size: 20px; margin-top: 16px; margin-bottom: 12px; color: var(--text);">プレイリストを選択</h3>
        <p style="font-size: 15px; color: var(--text-weak); line-height: 1.6; margin-bottom: 16px;">
          KAMUI CODEでは、開発用途に応じて最適化されたプレイリストを複数用意しています。Web開発、モバイルアプリ、データサイエンス、AI/ML開発など、あなたのプロジェクトに最適なサービスセットを選択してください。
        </p>
        <p style="font-size: 14px; color: var(--text-weak); line-height: 1.5;">
          各プレイリストには、画像生成、動画生成、音声合成、データベース操作など、必要なMCPサーバーが事前に組み込まれています。カスタムプレイリストの作成も可能で、必要なサービスのみを選択して独自の開発環境を構築できます。
        </p>
      </div>
      
      <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 32px; margin-bottom: 24px; position: relative;">
        <div style="position: absolute; top: -14px; left: 28px; width: 36px; height: 36px; background: #6366f1; color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-weight: 600; font-size: 18px;">2</div>
        <h3 style="font-size: 20px; margin-top: 16px; margin-bottom: 12px; color: var(--text);">MCP設定をコピー</h3>
        <p style="font-size: 15px; color: var(--text-weak); line-height: 1.6; margin-bottom: 16px;">
          選択したプレイリストの設定コードが自動的に生成されます。JSON形式またはTOML形式から、Claude Codeの設定ファイル形式に合わせて選択できます。ワンクリックで全設定をクリップボードにコピーできます。
        </p>
        <p style="font-size: 14px; color: var(--text-weak); line-height: 1.5;">
          各MCPサーバーの認証情報（APIキーなど）は環境変数として安全に管理されます。設定には必要最小限の情報のみが含まれ、セキュリティを保ちながら簡単にセットアップできるよう設計されています。
        </p>
      </div>
      
      <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 32px; margin-bottom: 24px; position: relative;">
        <div style="position: absolute; top: -14px; left: 28px; width: 36px; height: 36px; background: #6366f1; color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-weight: 600; font-size: 18px;">3</div>
        <h3 style="font-size: 20px; margin-top: 16px; margin-bottom: 12px; color: var(--text);">Claude Codeに追加</h3>
        <p style="font-size: 15px; color: var(--text-weak); line-height: 1.6; margin-bottom: 16px;">
          Claude Codeの設定ファイル（claude_code_config.json または mcp_config.toml）を開き、コピーした設定を貼り付けます。macOSの場合は ~/Library/Application Support/Claude/、Windowsの場合は %APPDATA%\Claude\ にあります。
        </p>
        <p style="font-size: 14px; color: var(--text-weak); line-height: 1.5;">
          既存の設定がある場合は、新しい設定が追加される形になります。設定ファイルのバックアップを取ることをお勧めします。設定の反映にはClaude Codeの再起動が必要な場合があります。
        </p>
      </div>
      
      <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 32px; margin-bottom: 48px; position: relative;">
        <div style="position: absolute; top: -14px; left: 28px; width: 36px; height: 36px; background: #6366f1; color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-weight: 600; font-size: 18px;">4</div>
        <h3 style="font-size: 20px; margin-top: 16px; margin-bottom: 12px; color: var(--text);">AIパワーで開発加速</h3>
        <p style="font-size: 15px; color: var(--text-weak); line-height: 1.6; margin-bottom: 16px;">
          設定が完了すると、Claude Code内からすべてのMCPサーバー機能にアクセスできるようになります。自然言語でAIに指示を出すだけで、画像生成、動画作成、データベース操作などが実行されます。
        </p>
        <p style="font-size: 14px; color: var(--text-weak); line-height: 1.5;">
          例えば「プロダクトのロゴを生成して」「デモ動画を作成」「データベースから売上データを取得」など、複雑なタスクも簡単な指示で実行できます。MCPサーバーはバックグラウンドで連携し、シームレスな開発体験を提供します。
        </p>
      </div>



      
      <h2 style="margin-bottom: 32px;">主要サービス</h2>
      <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px;">
        <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 28px; text-align: center;">
          <h3 style="font-size: 16px; margin-bottom: 8px;">画像生成 (T2I)</h3>
          <p style="font-size: 13px; color: var(--text-weak); line-height: 1.4;">Imagen4, Flux, Qwenなどの最新AIモデル</p>
        </div>
        <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 28px; text-align: center;">
          <h3 style="font-size: 16px; margin-bottom: 8px;">動画生成 (T2V)</h3>
          <p style="font-size: 13px; color: var(--text-weak); line-height: 1.4;">Veo3, Luma, WANなどの高品質動画生成</p>
        </div>
        <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 28px; text-align: center;">
          <h3 style="font-size: 16px; margin-bottom: 8px;">音声合成 (T2S)</h3>
          <p style="font-size: 13px; color: var(--text-weak); line-height: 1.4;">MiniMax Speech 2.5 Turboによる自然な音声</p>
        </div>
        <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 28px; text-align: center;">
          <h3 style="font-size: 16px; margin-bottom: 8px;">音楽生成 (T2M)</h3>
          <p style="font-size: 13px; color: var(--text-weak); line-height: 1.4;">Google Lyriaによる高品質音楽作成</p>
        </div>
        <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 28px; text-align: center;">
          <h3 style="font-size: 16px; margin-bottom: 8px;">動画編集 (V2V)</h3>
          <p style="font-size: 13px; color: var(--text-weak); line-height: 1.4;">Luma Ray2, Runwayなどの動画変換</p>
        </div>
        <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 28px; text-align: center;">
          <h3 style="font-size: 16px; margin-bottom: 8px;">ファイル管理</h3>
          <p style="font-size: 13px; color: var(--text-weak); line-height: 1.4;">FAL Storageによる安全なアップロード</p>
        </div>
      </div>
    </div>

mcp-diff:
  html: |
    <div class="page-header">
      <h1 class="page-title">MCP リスト、MCP SaaS、MCP ワークフローの違い</h1>
      <p class="page-subtitle">自動車や列車の部品のように使えるMCPサーバーの仕組み</p>
      <div class="page-divider"></div>
    </div>
    
    <div class="content mcp-diff mcp-diff-page">
      <div class="diff-hero-grid">
        <div class="diff-hero-media"></div>
        <div class="diff-hero-body">
          <h2>
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect x="3" y="3" width="8" height="8" rx="1" stroke="#93c5fd" stroke-width="1.5" fill="rgba(147,197,253,0.2)"/>
              <rect x="13" y="3" width="8" height="8" rx="1" stroke="#93c5fd" stroke-width="1.5" fill="rgba(147,197,253,0.2)"/>
              <rect x="3" y="13" width="8" height="8" rx="1" stroke="#93c5fd" stroke-width="1.5" fill="rgba(147,197,253,0.2)"/>
              <rect x="13" y="13" width="8" height="8" rx="1" stroke="#93c5fd" stroke-width="1.5" fill="rgba(147,197,253,0.2)"/>
              <path d="M7 7H7.01M17 7H17.01M7 17H7.01M17 17H17.01" stroke="#93c5fd" stroke-width="2" stroke-linecap="round"/>
            </svg>
            MCPリストは自動車や列車のための部品リスト
          </h2>
          <div class="diff-grid" style="margin: 24px 0;">
            <div class="diff-box diff-purple" style="padding: 24px;">
              <h3>
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect x="3" y="4" width="7" height="7" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139,92,246,0.08)"/>
                  <rect x="14" y="4" width="7" height="7" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139,92,246,0.08)"/>
                  <rect x="3" y="15" width="7" height="7" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139,92,246,0.08)"/>
                  <rect x="14" y="15" width="7" height="7" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139,92,246,0.08)"/>
                </svg>
                MCP リスト
              </h3>
              <p style="margin: 10px 0;">部品カタログのように</p>
              <p style="margin: 10px 0;">利用可能なMCPサーバーを単体で羅列</p>
              <p style="margin: 10px 0;"><strong>エンジン、タイヤ、ハンドル</strong>など</p>
              <p style="margin: 10px 0;">必要な部品を選んで組み立てる</p>
            </div>
            <div class="diff-box diff-blue" style="padding: 24px;">
              <h3>
                <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M4 12H8L10 4L14 20L16 12H20" stroke="#6366f1" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  <circle cx="12" cy="12" r="3" fill="#6366f1" opacity="0.3"/>
                </svg>
                特徴
              </h3>
              <p style="margin: 10px 0;">• 個別のMCPサーバーURL</p>
              <p style="margin: 10px 0;">• 単体で利用可能</p>
              <p style="margin: 10px 0;">• 自由に組み合わせ可能</p>
              <p style="margin: 10px 0;">• カスタマイズ性が高い</p>
            </div>
          </div>
          <div class="diff-tip" style="margin-top: 24px;">💡 部品リストから必要なMCPサーバーを選んで、自分だけの車（システム）を組み立てることができます！</div>
        </div>
      </div>

      <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 0; margin-bottom: 48px; border-radius: 16px; overflow: hidden; border: 1px solid var(--border);">
        <div style="background: linear-gradient(135deg, rgba(59, 130, 246, 0.3), rgba(99, 102, 241, 0.3)); padding: 24px;">
          <h2 style="font-size: 22px; margin-bottom: 16px; color: var(--text); display: flex; align-items: center; gap: 12px;">
            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M6 18L6 20C6 21 7 22 8 22H9C10 22 11 21 11 20V18M21 18V20C21 21 22 22 23 22H24C25 22 26 21 26 20V18" stroke="white" stroke-width="1.5" stroke-linecap="round"/>
              <path d="M6 18H26L25 12C25 11 24 10 23 10H9C8 10 7 11 7 12L6 18Z" fill="rgba(255, 255, 255, 0.15)" stroke="white" stroke-width="1.5"/>
              <circle cx="10" cy="18" r="2" fill="white"/>
              <circle cx="22" cy="18" r="2" fill="white"/>
              <path d="M12 14H20" stroke="white" stroke-width="1.5" stroke-linecap="round"/>
            </svg>
            MCP SaaSは自動車に例えることができる
          </h2>
          
          <div style="text-align: center; margin-bottom: 20px; padding: 16px; background: rgba(59, 130, 246, 0.15); border-radius: 12px;">
            <svg width="40" height="40" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-bottom: 12px;">
              <path d="M8 27L8 30C8 31.5 9.5 33 11 33H13C14.5 33 16 31.5 16 30V27M32 27V30C32 31.5 33.5 33 35 33H37C38.5 33 40 31.5 40 30V27" stroke="white" stroke-width="2" stroke-linecap="round"/>
              <path d="M8 27H40L38 18C38 16.5 36.5 15 35 15H13C11.5 15 10 16.5 10 18L8 27Z" fill="rgba(255, 255, 255, 0.2)" stroke="white" stroke-width="2"/>
              <circle cx="15" cy="27" r="3" fill="white"/>
              <circle cx="33" cy="27" r="3" fill="white"/>
              <path d="M18 21H30" stroke="white" stroke-width="2" stroke-linecap="round"/>
            </svg>
            <h4 style="font-size: 16px; margin-bottom: 12px; color: var(--text);">ストーリーボードプレイリスト = 完成した車</h4>
            <div style="display: flex; justify-content: center; align-items: center; gap: 32px; margin-top: 16px;">
              <div style="text-align: center;">
                <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="16" cy="16" r="12" stroke="white" stroke-width="2" fill="rgba(255, 255, 255, 0.1)"/>
                  <circle cx="16" cy="16" r="8" stroke="white" stroke-width="1.5" fill="rgba(255, 255, 255, 0.1)"/>
                  <circle cx="16" cy="16" r="4" fill="white"/>
                </svg>
                <p style="font-size: 13px; margin-top: 6px; color: var(--text-weak);"><strong>ハンドル</strong><br>(メイン)<br>絵コンテ・ビデオコンテ本体</p>
              </div>
              <div style="font-size: 24px; color: rgba(255, 255, 255, 0.5);">+</div>
              <div style="text-align: center;">
                <svg width="96" height="32" viewBox="0 0 96 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g transform="translate(0,0)">
                    <circle cx="16" cy="16" r="14" stroke="white" stroke-width="2" fill="rgba(255, 255, 255, 0.1)"/>
                    <path d="M16 8V16L20 20" stroke="white" stroke-width="2" stroke-linecap="round"/>
                  </g>
                  <g transform="translate(32,0)">
                    <circle cx="16" cy="16" r="14" stroke="white" stroke-width="2" fill="rgba(255, 255, 255, 0.1)"/>
                    <path d="M12 12H20V20H12Z" stroke="white" stroke-width="2"/>
                  </g>
                  <g transform="translate(64,0)">
                    <circle cx="16" cy="16" r="14" stroke="white" stroke-width="2" fill="rgba(255, 255, 255, 0.1)"/>
                    <path d="M16 10V22M12 14L16 10L20 14" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </g>
                </svg>
                <p style="font-size: 13px; margin-top: 6px; color: var(--text-weak);"><strong>タイヤたち</strong><br>(動作部品)<br>画像・動画・音声生成</p>
              </div>
            </div>
          </div>
          
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 24px;">
            <div style="background: rgba(99, 102, 241, 0.25); border-radius: 12px; padding: 20px;">
              <h4 style="font-size: 16px; margin-bottom: 12px; color: var(--text);">プレイリストの例</h4>
              <ul style="list-style: none; padding: 0;">
                <li style="padding: 6px 0; font-size: 14px; color: var(--text-weak); display: flex; align-items: center; gap: 8px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="8" cy="8" r="6" stroke="white" stroke-width="1" fill="rgba(255, 255, 255, 0.1)"/>
                    <circle cx="8" cy="8" r="2" fill="white"/>
                  </svg>
                  <strong>ハンドル</strong> - 絵コンテ・ビデオコンテ本体
                </li>
                <li style="padding: 6px 0; font-size: 14px; color: var(--text-weak); display: flex; align-items: center; gap: 8px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="3" y="3" width="10" height="10" rx="1" stroke="white" stroke-width="1" fill="rgba(255, 255, 255, 0.1)"/>
                    <path d="M5 10L7 8L9 10L11 6" stroke="white" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  <strong>タイヤ1</strong> - Imagen4 (画像生成)
                </li>
                <li style="padding: 6px 0; font-size: 14px; color: var(--text-weak); display: flex; align-items: center; gap: 8px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="3" y="3" width="10" height="10" rx="1" stroke="white" stroke-width="1" fill="rgba(255, 255, 255, 0.1)"/>
                    <path d="M6 5V11L11 8Z" fill="white"/>
                  </svg>
                  <strong>タイヤ2</strong> - Seedance (動画生成)
                </li>
                <li style="padding: 6px 0; font-size: 14px; color: var(--text-weak); display: flex; align-items: center; gap: 8px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="6" y="3" width="4" height="8" rx="2" stroke="white" stroke-width="1" fill="rgba(255, 255, 255, 0.1)"/>
                    <path d="M8 11V13" stroke="white" stroke-width="1" stroke-linecap="round"/>
                    <path d="M5 13H11" stroke="white" stroke-width="1" stroke-linecap="round"/>
                  </svg>
                  <strong>タイヤ3</strong> - MiniMax (音声合成)
                </li>
              </ul>
            </div>
            
            <div style="background: rgba(139, 92, 246, 0.25); border-radius: 12px; padding: 20px;">
              <h4 style="font-size: 16px; margin-bottom: 12px; color: var(--text);">カタログ = パーツショップ</h4>
              <ul style="list-style: none; padding: 0;">
                <li style="padding: 6px 0; font-size: 14px; color: var(--text-weak); display: flex; align-items: center; gap: 8px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8 2L10 4L8 6L6 4Z" stroke="white" stroke-width="1" stroke-linejoin="round"/>
                    <path d="M8 6V12" stroke="white" stroke-width="1" stroke-linecap="round"/>
                    <path d="M5 10L8 12L11 10" stroke="white" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  個別のMCPサーバー
                </li>
                <li style="padding: 6px 0; font-size: 14px; color: var(--text-weak); display: flex; align-items: center; gap: 8px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8 2L10 4L8 6L6 4Z" stroke="white" stroke-width="1" stroke-linejoin="round"/>
                    <path d="M8 6V12" stroke="white" stroke-width="1" stroke-linecap="round"/>
                    <path d="M5 10L8 12L11 10" stroke="white" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  好きな組み合わせ可能
                </li>
                <li style="padding: 6px 0; font-size: 14px; color: var(--text-weak); display: flex; align-items: center; gap: 8px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8 2L10 4L8 6L6 4Z" stroke="white" stroke-width="1" stroke-linejoin="round"/>
                    <path d="M8 6V12" stroke="white" stroke-width="1" stroke-linecap="round"/>
                    <path d="M5 10L8 12L11 10" stroke="white" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  単体でも使える
                </li>
                <li style="padding: 6px 0; font-size: 14px; color: var(--text-weak); display: flex; align-items: center; gap: 8px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8 2L10 4L8 6L6 4Z" stroke="white" stroke-width="1" stroke-linejoin="round"/>
                    <path d="M8 6V12" stroke="white" stroke-width="1" stroke-linecap="round"/>
                    <path d="M5 10L8 12L11 10" stroke="white" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  自作プレイリストに追加
                </li>
              </ul>
            </div>
          </div>
        </div>
        <div style="background: url('/kamui-code-docs/images/industrial_revolution_automobile.png') center/cover no-repeat; min-height: 450px;"></div>
      </div>

      <div style="display: grid; grid-template-columns: 1fr 2fr; gap: 0; margin-bottom: 48px; border-radius: 16px; overflow: hidden; border: 1px solid var(--border);">
        <div style="background: url('/kamui-code-docs/images/train_imagen4.png') center/cover no-repeat; min-height: 550px;"></div>
        <div style="background: linear-gradient(135deg, rgba(34, 197, 94, 0.3), rgba(16, 185, 129, 0.3)); padding: 24px;">
          <h2 style="font-size: 22px; margin-bottom: 16px; color: var(--text); display: flex; align-items: center; gap: 12px;">
            <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M6 20H26M6 20L4 22M26 20L28 22" stroke="#22c55e" stroke-width="2" stroke-linecap="round"/>
              <path d="M10 20V16M22 20V16" stroke="#22c55e" stroke-width="2" stroke-linecap="round"/>
              <rect x="9" y="10" width="4" height="6" rx="1" stroke="#22c55e" stroke-width="2" fill="rgba(34, 197, 94, 0.2)"/>
              <rect x="19" y="10" width="4" height="6" rx="1" stroke="#22c55e" stroke-width="2" fill="rgba(34, 197, 94, 0.2)"/>
              <path d="M13 13H19" stroke="#22c55e" stroke-width="2" stroke-linecap="round"/>
              <circle cx="7" cy="12" r="2" stroke="#22c55e" stroke-width="1.5" fill="rgba(34, 197, 94, 0.3)"/>
              <circle cx="25" cy="12" r="2" stroke="#22c55e" stroke-width="1.5" fill="rgba(34, 197, 94, 0.3)"/>
            </svg>
            MCPワークフローは例えるなら線路
          </h2>
          
          <div style="background: rgba(0, 0, 0, 0.3); border-radius: 12px; padding: 20px; margin-bottom: 20px;">
            <h3 style="font-size: 16px; margin-bottom: 12px; color: white;">MCPワークフローとは</h3>
            <p style="color: rgba(255, 255, 255, 0.9); margin-bottom: 16px; line-height: 1.6; font-size: 14px;">
              MCPワークフローは、複数のMCPサーバーを決められた順序で実行するための仕組みです。
              汽車が線路の上を走るように、各MCPサーバーがワークフローという線路の上を順番に実行されていきます。
            </p>
            
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 16px;">
              <div style="background: rgba(34, 197, 94, 0.2); border: 1px solid rgba(34, 197, 94, 0.4); border-radius: 8px; padding: 12px;">
                <h4 style="font-size: 14px; margin-bottom: 8px; color: #22c55e; display: flex; align-items: center; gap: 6px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2 8H14M14 8L11 5M14 8L11 11" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  順序制御
                </h4>
                <p style="font-size: 13px; color: var(--text-weak); line-height: 1.5;">
                  各MCPサーバーを決められた順番で実行。前の処理結果を次の処理で活用できます。
                </p>
              </div>
              
              <div style="background: rgba(34, 197, 94, 0.2); border: 1px solid rgba(34, 197, 94, 0.4); border-radius: 8px; padding: 12px;">
                <h4 style="font-size: 14px; margin-bottom: 8px; color: #22c55e; display: flex; align-items: center; gap: 6px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="2" y="2" width="12" height="12" rx="2" stroke="#22c55e" stroke-width="1.5"/>
                    <path d="M5 8L7 10L11 6" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                  自動化
                </h4>
                <p style="font-size: 13px; color: var(--text-weak); line-height: 1.5;">
                  複雑な処理を一連の流れとして自動化。手動での連携作業が不要になります。
                </p>
              </div>
              
              <div style="background: rgba(34, 197, 94, 0.2); border: 1px solid rgba(34, 197, 94, 0.4); border-radius: 8px; padding: 12px;">
                <h4 style="font-size: 14px; margin-bottom: 8px; color: #22c55e; display: flex; align-items: center; gap: 6px;">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8 2V14M8 14L5 11M8 14L11 11" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M2 6H5M11 6H14" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round"/>
                  </svg>
                  データ連携
                </h4>
                <p style="font-size: 13px; color: var(--text-weak); line-height: 1.5;">
                  各ステップ間でデータを受け渡し。前の処理結果を次の処理の入力として使用。
                </p>
              </div>
            </div>
          </div>
          
          <div style="background: rgba(34, 197, 94, 0.15); border-radius: 12px; padding: 16px;">
            <h4 style="font-size: 14px; margin-bottom: 12px; color: var(--text);">ワークフローの例：動画制作パイプライン</h4>
            <div style="display: flex; align-items: center; gap: 12px; overflow-x: auto; padding: 10px 0;">
              <div style="flex-shrink: 0; text-align: center;">
                <div style="background: rgba(255, 255, 255, 0.1); border: 2px solid #22c55e; border-radius: 6px; padding: 8px 12px; margin-bottom: 6px;">
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="3" y="3" width="14" height="14" rx="2" stroke="#22c55e" stroke-width="1.5"/>
                    <path d="M7 10H13M10 7V13" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round"/>
                  </svg>
                </div>
                <p style="font-size: 12px; color: var(--text-weak);">画像生成<br>(Imagen4)</p>
              </div>
              
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4 10H16M16 10L12 6M16 10L12 14" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              
              <div style="flex-shrink: 0; text-align: center;">
                <div style="background: rgba(255, 255, 255, 0.1); border: 2px solid #22c55e; border-radius: 6px; padding: 8px 12px; margin-bottom: 6px;">
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="3" y="3" width="14" height="14" rx="2" stroke="#22c55e" stroke-width="1.5"/>
                    <path d="M8 7V13L13 10Z" fill="#22c55e"/>
                  </svg>
                </div>
                <p style="font-size: 12px; color: var(--text-weak);">動画変換<br>(Seedance)</p>
              </div>
              
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4 10H16M16 10L12 6M16 10L12 14" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              
              <div style="flex-shrink: 0; text-align: center;">
                <div style="background: rgba(255, 255, 255, 0.1); border: 2px solid #22c55e; border-radius: 6px; padding: 8px 12px; margin-bottom: 6px;">
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="7" y="5" width="6" height="10" rx="3" stroke="#22c55e" stroke-width="1.5"/>
                    <path d="M10 15V16M8 16H12" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round"/>
                  </svg>
                </div>
                <p style="font-size: 12px; color: var(--text-weak);">音声追加<br>(MiniMax)</p>
              </div>
              
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4 10H16M16 10L12 6M16 10L12 14" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              
              <div style="flex-shrink: 0; text-align: center;">
                <div style="background: rgba(255, 255, 255, 0.1); border: 2px solid #22c55e; border-radius: 6px; padding: 8px 12px; margin-bottom: 6px;">
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="2" y="4" width="16" height="12" rx="2" stroke="#22c55e" stroke-width="1.5"/>
                    <path d="M6 12L8 10L11 12L14 8" stroke="#22c55e" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </div>
                <p style="font-size: 12px; color: var(--text-weak);">完成動画<br>出力</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div style="background: linear-gradient(135deg, rgba(99, 102, 241, 0.1), rgba(168, 85, 247, 0.1)); border: 1px solid rgba(99, 102, 241, 0.3); border-radius: 16px; padding: 32px; margin-bottom: 48px;">
        <h2 style="font-size: 24px; margin-bottom: 24px; color: #6366f1; display: flex; align-items: center; gap: 12px;">
          <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="16" cy="16" r="14" stroke="#6366f1" stroke-width="2" fill="rgba(99, 102, 241, 0.1)"/>
            <path d="M8 16C8 11.58 11.58 8 16 8V8C20.42 8 24 11.58 24 16V16C24 20.42 20.42 24 16 24V24C11.58 24 8 20.42 8 16V16Z" stroke="#6366f1" stroke-width="1.5"/>
            <circle cx="16" cy="12" r="2" fill="#6366f1"/>
            <circle cx="12" cy="18" r="2" fill="#6366f1"/>
            <circle cx="20" cy="18" r="2" fill="#6366f1"/>
            <path d="M16 12L12 18M16 12L20 18" stroke="#6366f1" stroke-width="1.5" stroke-linecap="round"/>
          </svg>
          MCP SaaS活用例: Web制作
        </h2>
        
        <div style="background: rgba(0, 0, 0, 0.3); border-radius: 12px; padding: 24px; margin-bottom: 24px;">
          <h3 style="font-size: 18px; margin-bottom: 16px; color: white;">Web制作用MCP SaaSの構成</h3>
          <p style="color: rgba(255, 255, 255, 0.9); margin-bottom: 20px;">
            以下のようなJSONをClaude Codeの設定に追加することで、Web制作に特化した環境を構築できます：
          </p>
          <div style="background: #1a1a1a; padding: 16px; border-radius: 8px; overflow-x: auto;">
            <pre class="code"><code>- serena: コードベース解析・編集
            - requirement: 要件定義書生成
            - t2i-kamui-imagen4-ultra: 高品質画像生成
            - i2i-kamui-flux-kontext-max: 画像編集・スタイル変換
            # 利用: https://kamui-code.ai
            </code></pre>
          </div>
        </div>

        <div style="background: rgba(0, 0, 0, 0.3); border-radius: 12px; padding: 24px; margin-bottom: 24px;">
          <h3 style="font-size: 18px; margin-bottom: 16px; color: white;">実際の使用例</h3>
          <video controls autoplay loop muted playsinline style="width: 100%; border-radius: 8px; margin-bottom: 16px;">
            <source src="/kamui-code-docs/videos/mcp-web-playlist-demo.mp4" type="video/mp4">
            お使いのブラウザは動画再生に対応していません。
          </video>
          <p style="color: rgba(255, 255, 255, 0.8); font-size: 14px;">
            👆 Web制作MCP SaaSを使って、Imagen4で画像を生成しながらWebページを制作している様子
          </p>
        </div>

        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
          <div style="background: rgba(99, 102, 241, 0.15); border-radius: 12px; padding: 20px;">
            <h4 style="color: #93c5fd; margin-bottom: 12px;">このプレイリストでできること</h4>
            <ul style="list-style: none; padding: 0; color: rgba(255, 255, 255, 0.9); font-size: 14px;">
              <li style="padding: 8px 0;">✨ 要件定義書の自動生成</li>
              <li style="padding: 8px 0;"> サイト用画像の生成・編集</li>
              <li style="padding: 8px 0;">📝 コードの解析と編集</li>
              <li style="padding: 8px 0;">🔄 既存画像のスタイル変換</li>
            </ul>
          </div>
          <div style="background: rgba(168, 85, 247, 0.15); border-radius: 12px; padding: 20px;">
            <h4 style="color: #c4b5fd; margin-bottom: 12px;">ワークフローの流れ</h4>
            <ol style="padding-left: 20px; color: rgba(255, 255, 255, 0.9); font-size: 14px;">
              <li style="padding: 8px 0;">要件定義MCPで仕様書作成</li>
              <li style="padding: 8px 0;">Claude Codeでコード実装</li>
              <li style="padding: 8px 0;">Imagen4で必要な画像を生成</li>
              <li style="padding: 8px 0;">Flux Kontextで画像を調整</li>
            </ol>
          </div>
        </div>
      </div>

      <h2 style="margin-bottom: 24px;">詳細比較</h2>
      <table style="width: 100%; border-collapse: collapse; margin-bottom: 48px;">
        <thead>
          <tr style="background: var(--hover);">
            <th style="padding: 16px; text-align: left; border: 1px solid var(--border); font-weight: 600;">項目</th>
            <th style="padding: 16px; text-align: left; border: 1px solid var(--border); color: #6366f1;">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" style="vertical-align: middle; margin-right: 8px;">
                <rect x="2" y="3" width="16" height="12" rx="1" stroke="#6366f1" stroke-width="1.5" fill="rgba(99, 102, 241, 0.1)"/>
                <path d="M5 7H15M5 9H15M5 11H12" stroke="#6366f1" stroke-width="1" stroke-linecap="round"/>
                <circle cx="14" cy="11" r="2" fill="#6366f1"/>
              </svg>
              プレイリスト
            </th>
            <th style="padding: 16px; text-align: left; border: 1px solid var(--border); color: #8b5cf6;">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" style="vertical-align: middle; margin-right: 8px;">
                <rect x="2" y="2" width="6" height="6" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139, 92, 246, 0.1)"/>
                <rect x="12" y="2" width="6" height="6" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139, 92, 246, 0.1)"/>
                <rect x="2" y="12" width="6" height="6" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139, 92, 246, 0.1)"/>
                <rect x="12" y="12" width="6" height="6" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139, 92, 246, 0.1)"/>
              </svg>
              カタログ
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td style="padding: 16px; border: 1px solid var(--border); font-weight: 600;">何？</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">複数MCPサーバーのセット</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">個別MCPサーバーのリスト</td>
          </tr>
          <tr style="background: var(--hover);">
            <td style="padding: 16px; border: 1px solid var(--border); font-weight: 600;">単位</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">用途別セット（JSON/TOML）</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">MCPサーバー単体（URL）</td>
          </tr>
          <tr>
            <td style="padding: 16px; border: 1px solid var(--border); font-weight: 600;">例え</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">Spotifyの「作業用BGM」</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">Spotifyの全楽曲リスト</td>
          </tr>
          <tr style="background: var(--hover);">
            <td style="padding: 16px; border: 1px solid var(--border); font-weight: 600;">利用方法</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">まとめて設定に追加</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">個別に選んで自分専用のプレイリスト（MCP Json/toml ファイル）を作成</td>
          </tr>
        </tbody>
      </table>

      <h2 style="margin-bottom: 24px;">どちらを使う？</h2>
      <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 24px; margin-bottom: 48px;">
        <div style="background: var(--card); border: 2px solid #6366f1; border-radius: 12px; padding: 32px;">
          <h3 style="font-size: 20px; margin-bottom: 20px; color: #6366f1; display: flex; align-items: center; gap: 12px;">
            <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect x="4" y="6" width="20" height="16" rx="2" stroke="#6366f1" stroke-width="2" fill="rgba(99, 102, 241, 0.1)"/>
              <path d="M8 11H20M8 14H20M8 17H16" stroke="#6366f1" stroke-width="1.5" stroke-linecap="round"/>
              <circle cx="19" cy="17" r="3" fill="#6366f1"/>
              <path d="M19 17V14" stroke="white" stroke-width="1" stroke-linecap="round"/>
            </svg>
            プレイリストはこんな時
          </h3>
          <ul style="list-style: none; padding: 0;">
            <li style="padding: 8px 0; color: var(--text-weak);">✓ <strong>すぐ使いたい</strong>（設定をコピペするだけ）</li>
            <li style="padding: 8px 0; color: var(--text-weak);">✓ <strong>用途が決まっている</strong>（ストーリーボード作成など）</li>
            <li style="padding: 8px 0; color: var(--text-weak);">✓ <strong>おすすめセットが欲しい</strong></li>
            <li style="padding: 8px 0; color: var(--text-weak);">✓ <strong>関連サービスを一括導入</strong></li>
          </ul>
          <div style="margin-top: 24px;">
            <a href="#playlist-all" onclick="navigateTo('playlist-all')" style="display: inline-block; background: #6366f1; color: white; padding: 10px 20px; border-radius: 8px; text-decoration: none;">
              プレイリスト一覧へ →
            </a>
          </div>
        </div>
        
        <div style="background: var(--card); border: 2px solid #8b5cf6; border-radius: 12px; padding: 32px;">
          <h3 style="font-size: 20px; margin-bottom: 20px; color: #8b5cf6; display: flex; align-items: center; gap: 12px;">
            <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect x="4" y="4" width="8" height="8" rx="1" stroke="#8b5cf6" stroke-width="2" fill="rgba(139, 92, 246, 0.1)"/>
              <rect x="16" y="4" width="8" height="8" rx="1" stroke="#8b5cf6" stroke-width="2" fill="rgba(139, 92, 246, 0.1)"/>
              <rect x="4" y="16" width="8" height="8" rx="1" stroke="#8b5cf6" stroke-width="2" fill="rgba(139, 92, 246, 0.1)"/>
              <rect x="16" y="16" width="8" height="8" rx="1" stroke="#8b5cf6" stroke-width="2" fill="rgba(139, 92, 246, 0.1)"/>
            </svg>
            カタログはこんな時
          </h3>
          <ul style="list-style: none; padding: 0;">
            <li style="padding: 8px 0; color: var(--text-weak);">✓ <strong>個別に選びたい</strong>（特定の機能だけ）</li>
            <li style="padding: 8px 0; color: var(--text-weak);">✓ <strong>性能を比較したい</strong></li>
            <li style="padding: 8px 0; color: var(--text-weak);">✓ <strong>自分でプレイリストを作りたい</strong></li>
            <li style="padding: 8px 0; color: var(--text-weak);">✓ <strong>詳細仕様を確認したい</strong></li>
          </ul>
          <div style="margin-top: 24px;">
            <a href="#catalog-all" onclick="navigateTo('catalog-all')" style="display: inline-block; background: #8b5cf6; color: white; padding: 10px 20px; border-radius: 8px; text-decoration: none;">
              カタログ一覧へ →
            </a>
          </div>
        </div>
      </div>

      <h2 style="margin-bottom: 24px;">よくある利用パターン</h2>
      <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 32px;">
        <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 32px;">
          <div>
            <h4 style="font-size: 18px; margin-bottom: 16px; color: var(--text);">🎯 パターン1: 既製プレイリスト利用</h4>
            <ol style="padding-left: 24px; color: var(--text-weak); line-height: 1.8;">
              <li>プレイリスト一覧から選ぶ</li>
              <li>JSON/TOMLをコピー</li>
              <li>Claude Codeに追加</li>
              <li>すぐ利用開始！</li>
            </ol>
          </div>
          
          <div>
            <h4 style="font-size: 18px; margin-bottom: 16px; color: var(--text);">🛠️ パターン2: カスタムプレイリスト作成</h4>
            <ol style="padding-left: 24px; color: var(--text-weak); line-height: 1.8;">
              <li>カタログで各MCPサーバーを確認</li>
              <li>必要なものを選ぶ</li>
              <li>自分だけのプレイリストを構成</li>
              <li>JSONに追加して利用！</li>
            </ol>
          </div>
        </div>
      </div>
      
      <div style="background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(59, 130, 246, 0.1)); border: 1px solid rgba(16, 185, 129, 0.3); border-radius: 16px; padding: 32px; margin-bottom: 48px;">
        <h2 style="font-size: 24px; margin-bottom: 24px; color: #10b981; display: flex; align-items: center; gap: 12px;">
          <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M6 10L12 16L18 10" stroke="#10b981" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M12 16V24" stroke="#10b981" stroke-width="2" stroke-linecap="round"/>
            <path d="M18 16L24 10" stroke="#10b981" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M24 10V18" stroke="#10b981" stroke-width="2" stroke-linecap="round"/>
            <circle cx="6" cy="10" r="3" fill="#10b981"/>
            <circle cx="18" cy="10" r="3" fill="#10b981"/>
            <circle cx="24" cy="10" r="3" fill="#10b981"/>
            <rect x="9" y="22" width="6" height="4" stroke="#10b981" stroke-width="2" rx="1"/>
          </svg>
          MCPワークフローとは？
        </h2>
        
        <div style="background: rgba(0, 0, 0, 0.3); border-radius: 12px; padding: 24px; margin-bottom: 24px;">
          <h3 style="font-size: 18px; margin-bottom: 16px; color: white;">複数のMCPサーバーを連携させた自動化フロー</h3>
          <p style="color: rgba(255, 255, 255, 0.9); margin-bottom: 20px;">
            ワークフローは、複数のMCPサーバーを組み合わせて、複雑なタスクを自動化する仕組みです。
            プレイリストがセットアップに特化しているのに対し、ワークフローは実行フローに特化しています。
          </p>
        </div>

        <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px;">
          <div style="background: rgba(16, 185, 129, 0.15); border-radius: 12px; padding: 20px;">
            <h4 style="color: #10b981; margin-bottom: 12px;">📊 ワークフローの例</h4>
            <ul style="list-style: none; padding: 0; color: rgba(255, 255, 255, 0.9); font-size: 14px;">
              <li style="padding: 6px 0;">✓ ブログ記事 → 画像生成 → SNS投稿</li>
              <li style="padding: 6px 0;">✓ 要件定義 → コード生成 → テスト</li>
              <li style="padding: 6px 0;">✓ 動画生成 → 字幕追加 → アップロード</li>
            </ul>
          </div>
          <div style="background: rgba(59, 130, 246, 0.15); border-radius: 12px; padding: 20px;">
            <h4 style="color: #3b82f6; margin-bottom: 12px;">🔗 連携の特徴</h4>
            <ul style="list-style: none; padding: 0; color: rgba(255, 255, 255, 0.9); font-size: 14px;">
              <li style="padding: 6px 0;">✓ 前の処理結果を次に渡す</li>
              <li style="padding: 6px 0;">✓ 条件分岐・エラー処理</li>
              <li style="padding: 6px 0;">✓ 並列処理・バッチ処理</li>
            </ul>
          </div>
          <div style="background: rgba(168, 85, 247, 0.15); border-radius: 12px; padding: 20px;">
            <h4 style="color: #a855f7; margin-bottom: 12px;">⚡ メリット</h4>
            <ul style="list-style: none; padding: 0; color: rgba(255, 255, 255, 0.9); font-size: 14px;">
              <li style="padding: 6px 0;">✓ 手作業の大幅削減</li>
              <li style="padding: 6px 0;">✓ 品質の一貫性</li>
              <li style="padding: 6px 0;">✓ 再利用可能なテンプレート</li>
            </ul>
          </div>
        </div>
      </div>
      
      <h2 style="margin-bottom: 24px;">3つの仕組みの違い</h2>
      <table style="width: 100%; border-collapse: collapse; margin-bottom: 48px;">
        <thead>
          <tr style="background: var(--hover);">
            <th style="padding: 16px; text-align: left; border: 1px solid var(--border); font-weight: 600;">項目</th>
            <th style="padding: 16px; text-align: left; border: 1px solid var(--border); color: #6366f1;">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" style="vertical-align: middle; margin-right: 8px;">
                <rect x="2" y="3" width="16" height="12" rx="1" stroke="#6366f1" stroke-width="1.5" fill="rgba(99, 102, 241, 0.1)"/>
                <path d="M5 7H15M5 9H15M5 11H12" stroke="#6366f1" stroke-width="1" stroke-linecap="round"/>
                <circle cx="14" cy="11" r="2" fill="#6366f1"/>
              </svg>
              プレイリスト
            </th>
            <th style="padding: 16px; text-align: left; border: 1px solid var(--border); color: #8b5cf6;">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" style="vertical-align: middle; margin-right: 8px;">
                <rect x="2" y="2" width="6" height="6" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139, 92, 246, 0.1)"/>
                <rect x="12" y="2" width="6" height="6" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139, 92, 246, 0.1)"/>
                <rect x="2" y="12" width="6" height="6" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139, 92, 246, 0.1)"/>
                <rect x="12" y="12" width="6" height="6" rx="1" stroke="#8b5cf6" stroke-width="1.5" fill="rgba(139, 92, 246, 0.1)"/>
              </svg>
              カタログ
            </th>
            <th style="padding: 16px; text-align: left; border: 1px solid var(--border); color: #10b981;">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" style="vertical-align: middle; margin-right: 8px;">
                <path d="M4 6L8 10L12 6" stroke="#10b981" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M8 10V14" stroke="#10b981" stroke-width="1.5" stroke-linecap="round"/>
                <path d="M12 10L16 6" stroke="#10b981" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M16 6V10" stroke="#10b981" stroke-width="1.5" stroke-linecap="round"/>
              </svg>
              ワークフロー
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td style="padding: 16px; border: 1px solid var(--border); font-weight: 600;">何？</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">MCPサーバーのセット</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">個別MCPサーバーのリスト</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">連携処理の自動化フロー</td>
          </tr>
          <tr style="background: var(--hover);">
            <td style="padding: 16px; border: 1px solid var(--border); font-weight: 600;">目的</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">環境セットアップ</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">サーバー選択・比較</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">タスク自動化</td>
          </tr>
          <tr>
            <td style="padding: 16px; border: 1px solid var(--border); font-weight: 600;">例え</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">音楽プレイリスト</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">全楽曲リスト</td>
            <td style="padding: 16px; border: 1px solid var(--border); color: var(--text-weak);">料理レシピ</td>
          </tr>
        </tbody>
      </table>
    </div>

playlist-creative:
  html: |
    <div class="page-header">
        <h1 class="page-title">クリエイティブプレイリスト</h1>
        <p class="page-subtitle">画像・動画・音声生成のMCPサーバー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-category-grid">
        <div class="playlist-card" onclick="navigateTo('playlist-image-ai')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">画像生成AI特化プレイリスト</h3>
                <div class="playlist-card-badge">画像生成特化</div>
            </div>
            <p class="playlist-card-description">最新の画像生成AI（Imagen4、Flux、Qwen）と画像編集AI（Kontext、Krea LoRA）を集約。プロ向け画像制作環境</p>
            <div class="playlist-card-stats">
                <span class="stat">🎨 10サーバー</span>
                <span class="stat">🖼️ 画像特化</span>
            </div>
        </div>
        
        <div class="playlist-card" onclick="navigateTo('playlist-video-ai')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">動画生成AI特化プレイリスト</h3>
                <div class="playlist-card-badge">動画生成特化</div>
            </div>
            <p class="playlist-card-description">最新の動画生成AI（Veo3、Luma、WAN）と動画編集AI（Ray2、Pixverse、Runway）を集約。プロ向け動画制作環境</p>
            <div class="playlist-card-stats">
                <span class="stat">🎬 12サーバー</span>
                <span class="stat">🎥 動画特化</span>
            </div>
        </div>
        
        <div class="playlist-card" onclick="navigateTo('playlist-storyboard')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">絵コンテ・ビデオコンテ プレイリスト</h3>
                <div class="playlist-card-badge">ストーリーボード</div>
            </div>
            <p class="playlist-card-description">ストーリーボード作成用。画像生成（Imagen4）、画像編集（Flux Kontext）、動画生成（Seedance）を統合</p>
            <div class="playlist-card-stats">
                <span class="stat"> 5サーバー</span>
                <span class="stat">📺 制作支援</span>
            </div>
        </div>
        
        <div class="playlist-card" onclick="navigateTo('playlist-kamui-code')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">KAMUI CODE プレイリスト</h3>
                <div class="playlist-card-badge">フルセット</div>
            </div>
            <p class="playlist-card-description">全55サーバー搭載。T2I、I2I、T2V、I2V、V2V、音声、音楽生成まで全機能カバー</p>
            <div class="playlist-card-stats">
                <span class="stat">🚀 55サーバー</span>
                <span class="stat">⭐ プロ仕様</span>
            </div>
        </div>
        
        <div class="playlist-card" onclick="navigateTo('playlist-remotion-video')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">Remotion動画生成プレイリスト</h3>
                <div class="playlist-card-badge">React動画</div>
            </div>
            <p class="playlist-card-description">Reactコンポーネントで動画制作。画像生成（Imagen4）、音声合成（MiniMax）、BGM生成（Lyria）を統合</p>
            <div class="playlist-card-stats">
                <span class="stat">⚛️ 6サーバー</span>
                <span class="stat">🎬 プログラマブル</span>
            </div>
        </div>
    </div>

playlist-development:
  html: |
    <div class="page-header">
        <h1 class="page-title">開発プレイリスト</h1>
        <p class="page-subtitle">開発ツール・CI/CD・解析のMCPサーバー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-category-grid">
        <div class="playlist-card" onclick="navigateTo('playlist-kamui-code')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">KAMUI CODE プレイリスト</h3>
                <div class="playlist-card-badge">統合開発環境</div>
            </div>
            <p class="playlist-card-description">開発者向け完全セット。ファイルアップロード、画像/動画処理、AI解析、自動化ツールを網羅</p>
            <div class="playlist-card-stats">
                <span class="stat">🛠️ 55サーバー</span>
                <span class="stat">💻 全機能搭載</span>
            </div>
        </div>
        
        <div class="playlist-card" onclick="navigateTo('playlist-requirement')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">Requirement プレイリスト</h3>
                <div class="playlist-card-badge">要件定義</div>
            </div>
            <p class="playlist-card-description">要件定義書の自動生成。画像生成・編集ツールを含む開発文書作成支援</p>
            <div class="playlist-card-stats">
                <span class="stat">📝 5サーバー</span>
                <span class="stat">📋 ドキュメント</span>
            </div>
        </div>
    </div>

playlist-business:
  html: |
    <div class="page-header">
        <h1 class="page-title">ビジネスプレイリスト</h1>
        <p class="page-subtitle">要件定義・文書作成・プレゼンテーションのMCPサーバー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-category-grid">
        <div class="playlist-card" onclick="navigateTo('playlist-requirement')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">Requirement プレイリスト</h3>
                <div class="playlist-card-badge">要件定義</div>
            </div>
            <p class="playlist-card-description">要件定義書の自動生成。HTML形式でナビゲーション付きドキュメント作成、画像生成機能付き</p>
            <div class="playlist-card-stats">
                <span class="stat">📋 5サーバー</span>
                <span class="stat">📝 文書自動化</span>
            </div>
        </div>
        
        <div class="playlist-card" onclick="navigateTo('playlist-storyboard')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">絵コンテ・ビデオコンテ プレイリスト</h3>
                <div class="playlist-card-badge">企画制作</div>
            </div>
            <p class="playlist-card-description">ストーリーボード作成支援。画像生成、動画作成、ナレーション追加まで完全サポート</p>
            <div class="playlist-card-stats">
                <span class="stat"> 5サーバー</span>
                <span class="stat">📊 ビジュアル化</span>
            </div>
        </div>
        
        <div class="playlist-card" onclick="navigateTo('playlist-kamui-code')">
            <div class="playlist-card-header">
                <h3 class="playlist-card-title">KAMUI CODE プレイリスト</h3>
                <div class="playlist-card-badge">全機能</div>
            </div>
            <p class="playlist-card-description">ビジネス用途に必要な全機能。文書作成、プレゼン、動画、音声まですべて網羅</p>
            <div class="playlist-card-stats">
                <span class="stat">🚀 55サーバー</span>
                <span class="stat">💼 エンタープライズ</span>
            </div>
        </div>
    </div>

playlist-all:
  html: |
    <div class="page-header">
        <h1 class="page-title">プレイリスト一覧</h1>
        <p class="page-subtitle">用途別に選べるMCP SaaS</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-packages-grid">
        <!-- Image AI Playlist -->
        <div class="package-card image-ai-package" onclick="navigateTo('playlist-image-ai')">
            <div class="package-header">
                <h3 class="package-title">画像生成AI特化プレイリスト</h3>
                <div class="package-path">/mcp/mcp-image-ai.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">サーバー数:</span>
                    <span class="stat-value">10</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">サイズ:</span>
                    <span class="stat-value">2.1 KB</span>
                </div>
            </div>
        </div>
        
        <!-- Video AI Playlist -->
        <div class="package-card video-ai-package" onclick="navigateTo('playlist-video-ai')">
            <div class="package-header">
                <h3 class="package-title">動画生成AI特化プレイリスト</h3>
                <div class="package-path">/mcp/mcp-video-ai.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">サーバー数:</span>
                    <span class="stat-value">12</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">サイズ:</span>
                    <span class="stat-value">2.4 KB</span>
                </div>
            </div>
        </div>
        
        <!-- 絵コンテ・ビデオコンテ Playlist -->
        <div class="package-card storyboard-package" onclick="navigateTo('playlist-storyboard')">
            <div class="package-header">
                <h3 class="package-title">絵コンテ・ビデオコンテ プレイリスト</h3>
                <div class="package-path">/mcp/mcp-storyboard.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">サーバー数:</span>
                    <span class="stat-value">5</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">サイズ:</span>
                    <span class="stat-value">1.2 KB</span>
                </div>
            </div>
        </div>
        
        <!-- Requirement Playlist -->
        <div class="package-card requirement-package" onclick="navigateTo('playlist-requirement')">
            <div class="package-header">
                <h3 class="package-title">Requirement プレイリスト</h3>
                <div class="package-path">/mcp/mcp-requirement.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">サーバー数:</span>
                    <span class="stat-value">5</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">サイズ:</span>
                    <span class="stat-value">1028 bytes</span>
                </div>
            </div>
        </div>
        
        <!-- KAMUI CODE Playlist -->
        <div class="package-card kamui-code-package" onclick="navigateTo('playlist-kamui-code')">
            <div class="package-header">
                <h3 class="package-title">KAMUI CODE プレイリスト</h3>
                <div class="package-path">/mcp/mcp-kamui-code.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">サーバー数:</span>
                    <span class="stat-value">55</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">サイズ:</span>
                    <span class="stat-value">8.2 KB</span>
                </div>
            </div>
        </div>
        
        <!-- Remotion Video Playlist -->
        <div class="package-card remotion-video-package" onclick="navigateTo('playlist-remotion-video')">
            <div class="package-header">
                <h3 class="package-title">Remotion動画生成プレイリスト</h3>
                <div class="package-path">/mcp/mcp-remotion-video.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">サーバー数:</span>
                    <span class="stat-value">6</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">サイズ:</span>
                    <span class="stat-value">1.4 KB</span>
                </div>
            </div>
        </div>
    </div>

catalog-all:
  html: |
    <h1 class="page-title">MCP リスト一覧</h1>
    <p class="page-subtitle">利用可能な全MCPサービス</p>
    
    <div class="catalog-grid">
        <div class="catalog-item" onclick="navigateTo('catalog-detail-imagen4')">
            <h3 class="catalog-name">Imagen4 Ultra</h3>
            <p class="catalog-path">t2i/fal/imagen4/ultra</p>
            <p class="catalog-description">Google DeepMindの最新画像生成モデル</p>
        </div>
        
        <div class="catalog-item" onclick="navigateTo('catalog-detail-flux')">
            <h3 class="catalog-name">Flux Kontext Max</h3>
            <p class="catalog-path">i2i/fal/flux/kontext/max</p>
            <p class="catalog-description">高品質な画像編集・変換モデル</p>
        </div>
        
        <div class="catalog-item" onclick="navigateTo('catalog-detail-wan')">
            <h3 class="catalog-name">WAN 2.2-5b</h3>
            <p class="catalog-path">t2v/fal/wan/v2.2-5b</p>
            <p class="catalog-description">テキストから動画を生成</p>
        </div>
        
        <div class="catalog-item" onclick="navigateTo('catalog-detail-minimax')">
            <h3 class="catalog-name">MiniMax Speech</h3>
            <p class="catalog-path">t2s/minimax/speech-2.5-turbo</p>
            <p class="catalog-description">自然な音声合成サービス</p>
        </div>
    </div>

mcp-catalog:
  html: |
    <div class="page-header">
        <h1 class="page-title">MCP カタログ</h1>
        <div class="page-divider"></div>
    </div>
    
    <div class="cards-section">
        <div class="cards-grid-3col">
            <div class="card-modern creative" onclick="navigateTo('catalog-creative')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Creative tools</h2>
                        <p class="card-subtitle">生成・編集ツール</p>
                    </div>
                    <span class="card-tag"> クリエイティブ</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Imagen Generation</span>
                            <span class="code-line">generate_image(<span class="code-string">"beautiful landscape"</span>)</span>
                            <span class="code-comment"># Video Creation</span>
                            <span class="code-line">create_video(<span class="code-string">prompt</span>=<span class="code-string">"sunset timelapse"</span>)</span>
                            <span class="code-comment"># Audio Synthesis</span>
                            <span class="code-line">synthesize_voice(<span class="code-string">text</span>, <span class="code-string">voice</span>=<span class="code-string">"natural"</span>)</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb creative-orb"></div>
            </div>
            
            <div class="card-modern development" onclick="navigateTo('catalog-development')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Development</h2>
                        <p class="card-subtitle">開発支援ツール</p>
                    </div>
                    <span class="card-tag"> クリエイティブ</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Upload Assets</span>
                            <span class="code-line">upload_file(<span class="code-string">path</span>=<span class="code-string">"/assets/video.mp4"</span>)</span>
                            <span class="code-comment"># Process Media</span>
                            <span class="code-line">process_video(<span class="code-var">input_url</span>, <span class="code-var">options</span>)</span>
                            <span class="code-comment"># Analyze Content</span>
                            <span class="code-line">analyze_frames(<span class="code-var">video_id</span>)</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb development-orb"></div>
            </div>
            
            <div class="card-modern business" onclick="navigateTo('catalog-business')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Business</h2>
                        <p class="card-subtitle">生成・編集ツール</p>
                    </div>
                    <span class="card-tag"> クリエイティブ</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Requirements Generation</span>
                            <span class="code-line">generate_requirements(<span class="code-var">project</span>)</span>
                            <span class="code-comment"># 絵コンテ・ビデオコンテ Creation</span>
                            <span class="code-line">create_storyboard(<span class="code-var">script</span>)</span>
                            <span class="code-comment"># Voice Over</span>
                            <span class="code-line">narrate_content(<span class="code-var">text</span>, <span class="code-string">lang</span>=<span class="code-string">"ja"</span>)</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb business-orb"></div>
            </div>
        </div>
    </div>

catalog-creative:
  html: |
    <h1 class="page-title">カタログ: クリエイティブ</h1>
    <p class="page-subtitle">生成・編集系のMCPサーバー</p>
    <div class="catalog-grid">
        <div class="catalog-item" onclick="navigateTo('t2i-imagen4')">
            <h3 class="catalog-name">Imagen4 Ultra</h3>
            <p class="catalog-path">t2i/fal/imagen4/ultra</p>
            <p class="catalog-description">高品質の画像生成</p>
        </div>
        <div class="catalog-item" onclick="navigateTo('i2i-flux')">
            <h3 class="catalog-name">Flux Kontext Max</h3>
            <p class="catalog-path">i2i/fal/flux/kontext/max</p>
            <p class="catalog-description">画像編集/変換の高性能モデル</p>
        </div>
    </div>

catalog-development:
  html: |
    <h1 class="page-title">カタログ: 開発</h1>
    <p class="page-subtitle">開発支援系のMCPサーバー</p>
    <div class="catalog-grid">
        <div class="catalog-item" onclick="navigateTo('t2v-wan')">
            <h3 class="catalog-name">WAN 2.2-5b (T2V)</h3>
            <p class="catalog-path">t2v/fal/wan/v2.2-5b</p>
            <p class="catalog-description">テキストから動画を生成</p>
        </div>
        <div class="catalog-item" onclick="navigateTo('uploader')">
            <h3 class="catalog-name">Uploader</h3>
            <p class="catalog-path">service/uploader/fal</p>
            <p class="catalog-description">アセットのアップロード/配信補助</p>
        </div>
    </div>

catalog-business:
  html: |
    <h1 class="page-title">カタログ: ビジネス</h1>
    <p class="page-subtitle">ドキュメント/要件定義支援</p>
    <div class="catalog-grid">
        <div class="catalog-item" onclick="navigateTo('req-docs')">
            <h3 class="catalog-name">Requirements Docs</h3>
            <p class="catalog-path">catalog/requirement</p>
            <p class="catalog-description">要件定義ドキュメントの参照</p>
        </div>
    </div>

catalog-detail-imagen4:
  html: |
    <h1 class="page-title">Imagen4 Ultra</h1>
    <p class="page-subtitle">画像生成モデルの詳細</p>
    <p>詳細は <a href="#t2i-imagen4" onclick="navigateTo('t2i-imagen4')">こちら</a> を参照。</p>

catalog-detail-flux:
  html: |
    <h1 class="page-title">Flux Kontext Max</h1>
    <p class="page-subtitle">画像編集/変換モデルの詳細</p>
    <p>詳細は <a href="#i2i-flux" onclick="navigateTo('i2i-flux')">こちら</a> を参照。</p>

catalog-detail-wan:
  html: |
    <h1 class="page-title">WAN 2.2-5b</h1>
    <p class="page-subtitle">テキストから動画作成</p>
    <p>詳細は <a href="#t2v-wan" onclick="navigateTo('t2v-wan')">こちら</a> を参照。</p>

catalog-detail-minimax:
  html: |
    <h1 class="page-title">MiniMax Speech</h1>
    <p class="page-subtitle">テキスト読み上げ</p>
    <p>詳細は <a href="#text-to-speech" onclick="navigateTo('text-to-speech')">こちら</a> を参照。</p>

t2i-imagen4:
  html: |
    <h1 class="page-title">Imagen4 Ultra (Text-to-Image)</h1>
    <p class="page-subtitle">高品質の画像生成エンジン</p>
    <div class="content">
        <h3>Endpoint</h3>
        <pre class="code"><code>/catalog/id/t2i/fal/imagen4/ultra</code></pre>
        <h3>mcp/config.json (例)</h3>
        <pre class="code"><code>{
        "mcpServers": [
        {
        "name": "fal/imagen4/ultra",
        "type": "t2i",
        "baseUrl": "YOUR_BASE_URL/t2i/fal/imagen4/ultra",
        "options": { "guidance_scale": 3.5, "safety_tolerance": 2 }
        }
        ]
        }</code></pre>
        <h3>Notes</h3>
        <ul>
            <li>guidance_scale: 1–20</li>
            <li>safety_tolerance: 1–6</li>
        </ul>
    </div>

i2i-flux:
  html: |
    <h1 class="page-title">Flux Kontext Max (Image-to-Image)</h1>
    <p class="page-subtitle">高精度な画像編集/変換</p>
    <div class="content">
        <h3>Endpoint</h3>
        <pre class="code"><code>/catalog/id/i2i/fal/flux/kontext/max</code></pre>
        <h3>mcp/config.json (例)</h3>
        <pre class="code"><code>{
        "mcpServers": [
        {
        "name": "fal/flux/kontext/max",
        "type": "i2i",
        "baseUrl": "YOUR_BASE_URL/i2i/fal/flux/kontext/max"
        }
        ]
        }</code></pre>
    </div>

t2v-wan:
  html: |
    <h1 class="page-title">WAN 2.2-5b (Text-to-Video)</h1>
    <p class="page-subtitle">テキストから動画を生成</p>
    <div class="content">
        <h3>Endpoint</h3>
        <pre class="code"><code>/catalog/id/t2v/fal/wan/v2.2-5b/text-to-video</code></pre>
        <h3>mcp/config.json (例)</h3>
        <pre class="code"><code>{
        "mcpServers": [
        {
        "name": "fal/wan/v2.2-5b",
        "type": "t2v",
        "baseUrl": "YOUR_BASE_URL/t2v/fal/wan/v2.2-5b/text-to-video"
        }
        ]
        }</code></pre>
    </div>

uploader:
  html: |
    <h1 class="page-title">Uploader (Service)</h1>
    <p class="page-subtitle">アセットのアップロード/配信を補助</p>
    <div class="content">
        <h3>Endpoint</h3>
        <pre class="code"><code>/catalog/id/uploader/fal</code></pre>
        <h3>mcp/config.json (例)</h3>
        <pre class="code"><code>{
        "mcpServers": [
        {
        "name": "fal/uploader",
        "type": "service",
        "baseUrl": "YOUR_BASE_URL/uploader/fal"
        }
        ]
        }</code></pre>
    </div>

req-docs:
  html: |
    <h1 class="page-title">Requirements Docs</h1>
    <p class="page-subtitle">要件定義ドキュメント</p>
    <div class="content">
        <p>要件定義の詳細は別ページで管理しています。</p>
        <ul>
            <li>ローカル: requirements-doc/index.html を開く</li>
            <li>トップ画像: kamui-docs-ui-pattern2-gradient.png</li>
        </ul>
    </div>

playlist-storyboard:
  html: |
    <div class="page-header">
        <h1 class="page-title">絵コンテ・ビデオコンテ プレイリスト</h1>
        <p class="page-subtitle">ストーリーボード作成用MCPサーバー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-detail-container">
        <div class="detail-section">
            <h2 class="section-title">デモ動画</h2>
            <div style="margin: 24px 0;">
                <video controls autoplay loop muted style="width: 100%; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.2);">
                    <source src="/kamui-code-docs/videos/storyboard-demo.mp4" type="video/mp4">
                    お使いのブラウザは動画再生に対応していません。
                </video>
                <p style="margin-top: 16px; color: var(--muted); font-size: 14px;">ストーリーボード作成の実際のワークフローをご覧ください</p>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">JSON設定</h2>
            <pre class="code"><code>{
            "mcpServers": {
            "storyboard": {
            "type": "http",
            "url": "https://{baseurl}/storyboard"
            },
            "t2i-kamui-imagen4-ultra": {
            "type": "http",
            "url": "https://{baseurl}/t2i/fal/imagen4/ultra"
            },
            "i2i-kamui-flux-kontext-max": {
            "type": "http",
            "url": "https://{baseurl}/i2i/fal/flux/kontext/max"
            },
            "i2v-kamui-seedance-v1-lite": {
            "type": "http",
            "url": "https://{baseurl}/i2v/fal/bytedance/seedance-v1-lite"
            }
            }
            }</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">TOML設定</h2>
            <pre class="code"><code>[mcpServers.storyboard]
            type = "http"
            url = "https://{baseurl}/storyboard"

            [mcpServers.t2i-kamui-imagen4-ultra]
            type = "http"
            url = "https://{baseurl}/t2i/fal/imagen4/ultra"

            [mcpServers.i2i-kamui-flux-kontext-max]
            type = "http"
            url = "https://{baseurl}/i2i/fal/flux/kontext/max"

            [mcpServers.i2v-kamui-seedance-v1-lite]
            type = "http"
            url = "https://{baseurl}/i2v/fal/bytedance/seedance-v1-lite"</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">利用方法</h2>
            <div class="usage-content">
                <h3>1. Claude Codeへの設定</h3>
                <p>Claude Codeの設定ファイルに上記のJSONまたはTOMLを追加</p>
                
                <h3>2. ストーリーボード作成</h3>
                <p>テキストから画像、画像から動画を生成してストーリーボードを作成</p>
                
                <h3>3. サーバー一覧</h3>
                <ul>
                    <li><strong>storyboard</strong> - メインストーリーボードサーバー</li>
                    <li><strong>t2i-kamui-imagen4-ultra</strong> - 高品質画像生成</li>
                    <li><strong>i2i-kamui-flux-kontext-max</strong> - 画像編集/変換</li>
                    <li><strong>i2v-kamui-seedance-v1-lite</strong> - 画像から動画生成</li>
                </ul>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">GitHub</h2>
            <div class="github-link">
                <a href="https://github.com/kamuicode/mcp-storyboard" target="_blank" class="github-button">
                    <span>💙 GitHubリポジトリを見る</span>
                </a>
            </div>
        </div>
    </div>

playlist-requirement:
  html: |
    <div class="page-header">
        <h1 class="page-title">Requirement プレイリスト</h1>
        <p class="page-subtitle">要件定義ドキュメント作成用MCPサーバー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-detail-container">
        <div class="detail-section">
            <h2 class="section-title">JSON設定</h2>
            <pre class="code"><code>{
            "mcpServers": {
            "requirement": {
            "type": "http",
            "url": "https://{baseurl}/requirement"
            },
            "t2i-kamui-imagen4-ultra": {
            "type": "http",
            "url": "https://{baseurl}/t2i/fal/imagen4/ultra"
            },
            "i2i-kamui-flux-kontext-max": {
            "type": "http",
            "url": "https://{baseurl}/i2i/fal/flux/kontext/max"
            },
            "i2i-kamui-flux-krea-lora": {
            "type": "http",
            "url": "https://{baseurl}/i2i/fal/flux-krea-lora/image-to-image"
            },
            "i2v-kamui-seedance-v1-lite": {
            "type": "http",
            "url": "https://{baseurl}/i2v/fal/bytedance/seedance-v1-lite"
            }
            }
            }</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">TOML設定</h2>
            <pre class="code"><code>[mcpServers.requirement]
            type = "http"
            url = "https://{baseurl}/requirement"

            [mcpServers.t2i-kamui-imagen4-ultra]
            type = "http"
            url = "https://{baseurl}/t2i/fal/imagen4/ultra"

            [mcpServers.i2i-kamui-flux-kontext-max]
            type = "http"
            url = "https://{baseurl}/i2i/fal/flux/kontext/max"

            [mcpServers.i2i-kamui-flux-krea-lora]
            type = "http"
            url = "https://{baseurl}/i2i/fal/flux-krea-lora/image-to-image"

            [mcpServers.i2v-kamui-seedance-v1-lite]
            type = "http"
            url = "https://{baseurl}/i2v/fal/bytedance/seedance-v1-lite"</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">利用方法</h2>
            <div class="usage-content">
                <h3>1. Claude Codeへの設定</h3>
                <p>Claude Codeの設定ファイルに上記のJSONまたはTOMLを追加</p>
                
                <h3>2. 要件定義作成</h3>
                <p>HTML形式で左サイドバーナビゲーション付きの要件定義ドキュメントを生成</p>
                
                <h3>3. サーバー一覧</h3>
                <ul>
                    <li><strong>requirement</strong> - 要件定義ドキュメントジェネレータ</li>
                    <li><strong>t2i-kamui-imagen4-ultra</strong> - 高品質画像生成</li>
                    <li><strong>i2i-kamui-flux-kontext-max</strong> - 画像編集/変換</li>
                    <li><strong>i2i-kamui-flux-krea-lora</strong> - LoRA画像編集</li>
                    <li><strong>i2v-kamui-seedance-v1-lite</strong> - 画像から動画生成</li>
                </ul>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">イメージ</h2>
            <div class="image-gallery">
                <div class="image-placeholder">
                    <p>画像パス: ./images/requirement-sample.png</p>
                </div>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">GitHub</h2>
            <div class="github-link">
                <a href="https://github.com/kamuicode/mcp-requirement" target="_blank" class="github-button">
                    <span>💙 GitHubリポジトリを見る</span>
                </a>
            </div>
        </div>
    </div>

playlist-kamui-code:
  html: |
    <div class="page-header">
        <h1 class="page-title">KAMUI CODE プレイリスト</h1>
        <p class="page-subtitle">フル機能搭載のMCPサーバーセット</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-detail-container">
        <div class="detail-section">
            <h2 class="section-title">JSON設定（主要サーバーのみ抜粋）</h2>
            <pre class="code"><code>{
            "mcpServers": {
            "file-upload-kamui-fal": {
            "type": "http",
            "url": "https://{baseurl}/uploader/fal"
            },
            "t2i-kamui-imagen4-ultra": {
            "type": "http",
            "url": "https://{baseurl}/t2i/fal/imagen4/ultra"
            },
            "i2i-kamui-flux-kontext-max": {
            "type": "http",
            "url": "https://{baseurl}/i2i/fal/flux/kontext/max"
            },
            "t2v-kamui-veo3-fast": {
            "type": "http",
            "url": "https://{baseurl}/t2v/fal/veo3/fast"
            },
            "i2v-kamui-hailuo-02-pro": {
            "type": "http",
            "url": "https://{baseurl}/i2v/fal/minimax/hailuo-02/pro"
            },
            "v2v-kamui-luma-ray2": {
            "type": "http",
            "url": "https://{baseurl}/v2v/fal/luma/dream-machine/ray-2/modify"
            },
            "t2s-kamui-minimax-speech-25-turbo-preview": {
            "type": "http",
            "url": "https://{baseurl}/t2s/minimax/speech-2-5-turbo-preview"
            }
            }
            // ... 他48サーバー
            }</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">TOML設定（一部抜粋）</h2>
            <pre class="code"><code>[mcpServers.file-upload-kamui-fal]
            type = "http"
            url = "https://{baseurl}/uploader/fal"

            [mcpServers.t2i-kamui-imagen4-ultra]
            type = "http"
            url = "https://{baseurl}/t2i/fal/imagen4/ultra"

            [mcpServers.i2i-kamui-flux-kontext-max]
            type = "http"
            url = "https://{baseurl}/i2i/fal/flux/kontext/max"

            # ... その他サーバー設定</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">利用方法</h2>
            <div class="usage-content">
                <h3>1. フル機能セットアップ</h3>
                <p>55個のサーバーを一括でClaude Codeに追加</p>
                
                <h3>2. 主要機能</h3>
                <ul>
                    <li><strong>画像生成 (T2I)</strong> - Imagen4, Flux, Dreamina, Qwen等</li>
                    <li><strong>画像編集 (I2I)</strong> - Kontext, Krea LoRA, AuraSR等</li>
                    <li><strong>動画生成 (T2V)</strong> - Veo3, WAN, Luma等</li>
                    <li><strong>画像から動画 (I2V)</strong> - Hailuo, Seedance, OmniHuman等</li>
                    <li><strong>動画編集 (V2V)</strong> - Luma Ray2, Pixverse, Runway等</li>
                    <li><strong>音声合成 (T2S)</strong> - MiniMax Speech 2.5 Turbo</li>
                    <li><strong>音楽生成 (T2M)</strong> - Google Lyria</li>
                    <li><strong>ファイルアップロード</strong> - FAL Storage</li>
                </ul>
                
                <h3>3. 特徴</h3>
                <ul>
                    <li>⭐ 全機能をカバーする統合パッケージ</li>
                    <li>🚀 最新モデルに対応</li>
                    <li>🔧 プロフェッショナル向け設計</li>
                </ul>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">イメージ</h2>
            <div class="image-gallery">
                <div class="image-placeholder">
                    <p>画像パス: ./images/kamui-code-sample.png</p>
                </div>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">GitHub</h2>
            <div class="github-link">
                <a href="https://github.com/kamuicode/mcp-kamui-code" target="_blank" class="github-button">
                    <span>💙 GitHubリポジトリを見る</span>
                </a>
            </div>
        </div>
    </div>

playlist-video-ai:
  html: |
    <div class="page-header">
        <h1 class="page-title">動画生成AI特化プレイリスト</h1>
        <p class="page-subtitle">最新の動画生成・編集AIを集約したプロフェッショナル向けMCPサーバー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-detail-container">
        <div class="detail-section">
            <h2 class="section-title">JSON設定</h2>
            <pre class="code"><code>{
            "mcpServers": {
            "file-upload-kamui-fal": {
            "type": "http",
            "url": "https://{baseurl}/uploader/fal"
            },
            "t2v-kamui-veo3-fast": {
            "type": "http",
            "url": "https://{baseurl}/t2v/fal/veo3/fast"
            },
            "t2v-kamui-veo3-pro": {
            "type": "http",
            "url": "https://{baseurl}/t2v/fal/veo3/pro"
            },
            "t2v-kamui-wan-v2-2-5b": {
            "type": "http",  
            "url": "https://{baseurl}/t2v/fal/wan/v2.2-5b/text-to-video"
            },
            "t2v-kamui-luma-dream-machine": {
            "type": "http",
            "url": "https://{baseurl}/t2v/fal/luma/dream-machine/create"
            },
            "i2v-kamui-hailuo-02-pro": {
            "type": "http",
            "url": "https://{baseurl}/i2v/fal/minimax/hailuo-02/pro"
            },
            "i2v-kamui-seedance-v1-lite": {
            "type": "http",
            "url": "https://{baseurl}/i2v/fal/bytedance/seedance-v1-lite"
            },
            "i2v-kamui-omnihuman-lite": {
            "type": "http",
            "url": "https://{baseurl}/i2v/fal/omnihuman/lite"
            },
            "v2v-kamui-luma-ray2": {
            "type": "http",
            "url": "https://{baseurl}/v2v/fal/luma/dream-machine/ray-2/modify"
            },
            "v2v-kamui-pixverse-modify": {
            "type": "http",
            "url": "https://{baseurl}/v2v/fal/pixverse/modify"
            },
            "v2v-kamui-runway-gen3": {
            "type": "http",
            "url": "https://{baseurl}/v2v/fal/runway/gen3/turbo/extend"
            },
            "utility-video-upscale": {
            "type": "http",
            "url": "https://{baseurl}/util/fal/pixverse/upscale"
            }
            }
            }</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">TOML設定</h2>
            <pre class="code"><code>[mcpServers.file-upload-kamui-fal]
            type = "http"
            url = "https://{baseurl}/uploader/fal"

            [mcpServers.t2v-kamui-veo3-fast]
            type = "http"
            url = "https://{baseurl}/t2v/fal/veo3/fast"

            [mcpServers.t2v-kamui-veo3-pro]
            type = "http"
            url = "https://{baseurl}/t2v/fal/veo3/pro"

            [mcpServers.t2v-kamui-wan-v2-2-5b]
            type = "http"
            url = "https://{baseurl}/t2v/fal/wan/v2.2-5b/text-to-video"

            [mcpServers.t2v-kamui-luma-dream-machine]
            type = "http"
            url = "https://{baseurl}/t2v/fal/luma/dream-machine/create"

            [mcpServers.i2v-kamui-hailuo-02-pro]
            type = "http"
            url = "https://{baseurl}/i2v/fal/minimax/hailuo-02/pro"

            [mcpServers.i2v-kamui-seedance-v1-lite]
            type = "http"
            url = "https://{baseurl}/i2v/fal/bytedance/seedance-v1-lite"

            [mcpServers.i2v-kamui-omnihuman-lite]
            type = "http"
            url = "https://{baseurl}/i2v/fal/omnihuman/lite"

            [mcpServers.v2v-kamui-luma-ray2]
            type = "http"
            url = "https://{baseurl}/v2v/fal/luma/dream-machine/ray-2/modify"

            [mcpServers.v2v-kamui-pixverse-modify]
            type = "http"
            url = "https://{baseurl}/v2v/fal/pixverse/modify"

            [mcpServers.v2v-kamui-runway-gen3]
            type = "http"
            url = "https://{baseurl}/v2v/fal/runway/gen3/turbo/extend"

            [mcpServers.utility-video-upscale]
            type = "http"
            url = "https://{baseurl}/util/fal/pixverse/upscale"</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">利用方法</h2>
            <div class="usage-content">
                <h3>1. Claude Codeへの設定</h3>
                <p>Claude Codeの設定ファイルに上記のJSONまたはTOMLを追加</p>
                
                <h3>2. 動画生成AI特化の機能</h3>
                <p>最新の動画生成・編集AIを統合し、プロフェッショナルな動画制作環境を提供</p>
                
                <h3>3. サーバー一覧</h3>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 24px; margin-top: 16px;">
                    <div>
                        <h4 style="color: #6366f1; margin-bottom: 12px;">🎬 動画生成 (T2V)</h4>
                        <ul>
                            <li><strong>t2v-kamui-veo3-fast</strong> - Google Veo3の高速版</li>
                            <li><strong>t2v-kamui-veo3-pro</strong> - Google Veo3のプロ版</li>
                            <li><strong>t2v-kamui-wan-v2-2-5b</strong> - WAN 2.2-5bモデル</li>
                            <li><strong>t2v-kamui-luma-dream-machine</strong> - Luma Dream Machine</li>
                        </ul>
                    </div>
                    <div>
                        <h4 style="color: #8b5cf6; margin-bottom: 12px;">🖼️ 画像から動画 (I2V)</h4>
                        <ul>
                            <li><strong>i2v-kamui-hailuo-02-pro</strong> - Hailuoプロ版</li>
                            <li><strong>i2v-kamui-seedance-v1-lite</strong> - ByteDance Seedance</li>
                            <li><strong>i2v-kamui-omnihuman-lite</strong> - 人物動画特化</li>
                        </ul>
                    </div>
                </div>
                <div style="margin-top: 24px;">
                    <h4 style="color: #10b981; margin-bottom: 12px;">🎞️ 動画編集 (V2V)</h4>
                    <ul>
                        <li><strong>v2v-kamui-luma-ray2</strong> - Luma Ray2による動画変換</li>
                        <li><strong>v2v-kamui-pixverse-modify</strong> - Pixverseの動画編集</li>
                        <li><strong>v2v-kamui-runway-gen3</strong> - Runway Gen3 Turboで動画拡張</li>
                    </ul>
                </div>
                <div style="margin-top: 24px;">
                    <h4 style="color: #f59e0b; margin-bottom: 12px;">🛠️ ユーティリティ</h4>
                    <ul>
                        <li><strong>file-upload-kamui-fal</strong> - 動画ファイルアップロード</li>
                        <li><strong>utility-video-upscale</strong> - 動画の高解像度化</li>
                    </ul>
                </div>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">特徴</h2>
            <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px;">
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">🎬</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">最新モデル搭載</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">Veo3、Luma、WAN、Runwayなど最先端AI</p>
                </div>
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">🎥</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">完全な動画ワークフロー</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">生成から編集、アップスケールまで一貫対応</p>
                </div>
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">⚡</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">プロ仕様の性能</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">高解像度・高フレームレートに対応</p>
                </div>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">GitHub</h2>
            <div class="github-link">
                <a href="https://github.com/kamuicode/mcp-video-ai" target="_blank" class="github-button">
                    <span>💙 GitHubリポジトリを見る</span>
                </a>
            </div>
        </div>
    </div>

playlist-image-ai:
  html: |
    <div class="page-header">
        <h1 class="page-title">画像生成AI特化プレイリスト</h1>
        <p class="page-subtitle">最新の画像生成・編集AIを集約したプロフェッショナル向けMCPサーバー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-detail-container">
        <div class="detail-section">
            <h2 class="section-title">JSON設定</h2>
            <pre class="code"><code>{
            "mcpServers": {
            "file-upload-kamui-fal": {
            "type": "http",
            "url": "https://{baseurl}/uploader/fal"
            },
            "t2i-kamui-imagen4-ultra": {
            "type": "http",
            "url": "https://{baseurl}/t2i/fal/imagen4/ultra"
            },
            "t2i-kamui-flux-lora": {
            "type": "http",
            "url": "https://{baseurl}/t2i/fal/flux-lora"
            },
            "t2i-kamui-qwen-vl-plus": {
            "type": "http",  
            "url": "https://{baseurl}/t2i/fal/qwen/vl-plus"
            },
            "i2i-kamui-flux-kontext-max": {
            "type": "http",
            "url": "https://{baseurl}/i2i/fal/flux/kontext/max"
            },
            "i2i-kamui-flux-krea-lora": {
            "type": "http",
            "url": "https://{baseurl}/i2i/fal/flux-krea-lora/image-to-image"
            },
            "i2i-kamui-aurafsr": {
            "type": "http",
            "url": "https://{baseurl}/i2i/fal/AuraSR"
            },
            "i2i-kamui-clarity-upscaler": {
            "type": "http",
            "url": "https://{baseurl}/i2i/fal/clarity-upscaler"
            },
            "utility-image-caption": {
            "type": "http",
            "url": "https://{baseurl}/util/fal/blip-image-captioning"
            },
            "utility-background-removal": {
            "type": "http",
            "url": "https://{baseurl}/util/fal/rembg-background-removal"
            }
            }
            }</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">TOML設定</h2>
            <pre class="code"><code>[mcpServers.file-upload-kamui-fal]
            type = "http"
            url = "https://{baseurl}/uploader/fal"

            [mcpServers.t2i-kamui-imagen4-ultra]
            type = "http"
            url = "https://{baseurl}/t2i/fal/imagen4/ultra"

            [mcpServers.t2i-kamui-flux-lora]
            type = "http"
            url = "https://{baseurl}/t2i/fal/flux-lora"

            [mcpServers.t2i-kamui-qwen-vl-plus]
            type = "http"
            url = "https://{baseurl}/t2i/fal/qwen/vl-plus"

            [mcpServers.i2i-kamui-flux-kontext-max]
            type = "http"
            url = "https://{baseurl}/i2i/fal/flux/kontext/max"

            [mcpServers.i2i-kamui-flux-krea-lora]
            type = "http"
            url = "https://{baseurl}/i2i/fal/flux-krea-lora/image-to-image"

            [mcpServers.i2i-kamui-aurafsr]
            type = "http"
            url = "https://{baseurl}/i2i/fal/AuraSR"

            [mcpServers.i2i-kamui-clarity-upscaler]
            type = "http"
            url = "https://{baseurl}/i2i/fal/clarity-upscaler"

            [mcpServers.utility-image-caption]
            type = "http"
            url = "https://{baseurl}/util/fal/blip-image-captioning"

            [mcpServers.utility-background-removal]
            type = "http"
            url = "https://{baseurl}/util/fal/rembg-background-removal"</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">利用方法</h2>
            <div class="usage-content">
                <h3>1. Claude Codeへの設定</h3>
                <p>Claude Codeの設定ファイルに上記のJSONまたはTOMLを追加</p>
                
                <h3>2. 画像生成AI特化の機能</h3>
                <p>最新の画像生成・編集AIを統合し、プロフェッショナルな画像制作環境を提供</p>
                
                <h3>3. サーバー一覧</h3>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 24px; margin-top: 16px;">
                    <div>
                        <h4 style="color: #6366f1; margin-bottom: 12px;">🎨 画像生成 (T2I)</h4>
                        <ul>
                            <li><strong>t2i-kamui-imagen4-ultra</strong> - Google DeepMindの最新モデル</li>
                            <li><strong>t2i-kamui-flux-lora</strong> - LoRA対応の高品質生成</li>
                            <li><strong>t2i-kamui-qwen-vl-plus</strong> - Qwen VLの高性能モデル</li>
                        </ul>
                    </div>
                    <div>
                        <h4 style="color: #8b5cf6; margin-bottom: 12px;">✏️ 画像編集 (I2I)</h4>
                        <ul>
                            <li><strong>i2i-kamui-flux-kontext-max</strong> - 高精度な画像編集</li>
                            <li><strong>i2i-kamui-flux-krea-lora</strong> - LoRAスタイル編集</li>
                            <li><strong>i2i-kamui-aurafsr</strong> - 超解像度化</li>
                            <li><strong>i2i-kamui-clarity-upscaler</strong> - 高品質アップスケール</li>
                        </ul>
                    </div>
                </div>
                <div style="margin-top: 24px;">
                    <h4 style="color: #10b981; margin-bottom: 12px;">🛠️ ユーティリティ</h4>
                    <ul>
                        <li><strong>file-upload-kamui-fal</strong> - 画像ファイルアップロード</li>
                        <li><strong>utility-image-caption</strong> - 画像の自動キャプション生成</li>
                        <li><strong>utility-background-removal</strong> - 背景除去ツール</li>
                    </ul>
                </div>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">特徴</h2>
            <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px;">
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">🎨</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">最新モデル搭載</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">Imagen4、Flux、Qwenなど最先端AI</p>
                </div>
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">🖼️</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">完全な画像ワークフロー</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">生成から編集、後処理まで一貫対応</p>
                </div>
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">⚡</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">プロ仕様の性能</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">高解像度・高品質な出力に対応</p>
                </div>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">GitHub</h2>
            <div class="github-link">
                <a href="https://github.com/kamuicode/mcp-image-ai" target="_blank" class="github-button">
                    <span>💙 GitHubリポジトリを見る</span>
                </a>
            </div>
        </div>
    </div>

playlist-remotion-video:
  html: |
    <div class="page-header">
        <h1 class="page-title">Remotion動画生成プレイリスト</h1>
        <p class="page-subtitle">React開発者向けプログラマブル動画生成MCPサーバー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="playlist-detail-container">
        <div class="detail-section">
            <h2 class="section-title">デモ動画</h2>
            <div style="margin: 24px 0;">
                <video controls autoplay loop muted style="width: 100%; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.2);">
                    <source src="/kamui-code-docs/videos/remotion-demo.mp4" type="video/mp4">
                    お使いのブラウザは動画再生に対応していません。
                </video>
                <p style="margin-top: 16px; color: var(--muted); font-size: 14px;">Reactコンポーネントで動画を生成する革新的なワークフロー</p>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">JSON設定</h2>
            <pre class="code"><code>{
            "mcpServers": {
            "remotion-video": {
            "type": "http",
            "url": "https://{baseurl}/remotion/video"
            },
            "remotion-lambda": {
            "type": "http",
            "url": "https://{baseurl}/remotion/lambda"
            },
            "remotion-templates": {
            "type": "http",
            "url": "https://{baseurl}/remotion/templates"
            },
            "t2i-kamui-imagen4-ultra": {
            "type": "http",
            "url": "https://{baseurl}/t2i/fal/imagen4/ultra"
            },
            "t2s-kamui-minimax-speech-25-turbo-preview": {
            "type": "http",
            "url": "https://{baseurl}/t2s/minimax/speech-2-5-turbo-preview"
            },
            "t2m-kamui-lyria": {
            "type": "http",
            "url": "https://{baseurl}/t2m/fal/google/lyria"
            }
            }
            }</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">TOML設定</h2>
            <pre class="code"><code>[mcpServers.remotion-video]
            type = "http"
            url = "https://{baseurl}/remotion/video"

            [mcpServers.remotion-lambda]
            type = "http"
            url = "https://{baseurl}/remotion/lambda"

            [mcpServers.remotion-templates]
            type = "http"
            url = "https://{baseurl}/remotion/templates"

            [mcpServers.t2i-kamui-imagen4-ultra]
            type = "http"
            url = "https://{baseurl}/t2i/fal/imagen4/ultra"

            [mcpServers.t2s-kamui-minimax-speech-25-turbo-preview]
            type = "http"
            url = "https://{baseurl}/t2s/minimax/speech-2-5-turbo-preview"

            [mcpServers.t2m-kamui-lyria]
            type = "http"
            url = "https://{baseurl}/t2m/fal/google/lyria"</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">利用方法</h2>
            <div class="usage-content">
                <h3>1. Claude Codeへの設定</h3>
                <p>Claude Codeの設定ファイルに上記のJSONまたはTOMLを追加</p>
                
                <h3>2. Remotionの特徴</h3>
                <p>Reactコンポーネントを使用してプログラマブルに動画を生成する革新的なアプローチ</p>
                
                <h3>3. サーバー一覧</h3>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 24px; margin-top: 16px;">
                    <div>
                        <h4 style="color: #6366f1; margin-bottom: 12px;">⚛️ Remotionコア</h4>
                        <ul>
                            <li><strong>remotion-video</strong> - メイン動画生成エンジン</li>
                            <li><strong>remotion-lambda</strong> - クラウドレンダリング対応</li>
                            <li><strong>remotion-templates</strong> - 豊富なテンプレート集</li>
                        </ul>
                    </div>
                    <div>
                        <h4 style="color: #8b5cf6; margin-bottom: 12px;">🎨 クリエイティブ補助</h4>
                        <ul>
                            <li><strong>t2i-kamui-imagen4-ultra</strong> - 動画素材用画像生成</li>
                            <li><strong>t2s-kamui-minimax-speech</strong> - ナレーション音声生成</li>
                            <li><strong>t2m-kamui-lyria</strong> - BGM音楽生成</li>
                        </ul>
                    </div>
                </div>
                
                <div style="margin-top: 24px;">
                    <h4 style="color: #10b981; margin-bottom: 12px;">💡 使用例</h4>
                    <ul>
                        <li>プロダクト紹介動画の自動生成</li>
                        <li>データビジュアライゼーション動画</li>
                        <li>ソーシャルメディア用コンテンツ作成</li>
                        <li>教育コンテンツ・チュートリアル動画</li>
                    </ul>
                </div>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">コードサンプル</h2>
            <pre class="code"><code>// Remotionで動画を生成する例
            const VideoComponent = () => {
              const frame = useCurrentFrame();
              const { fps } = useVideoConfig();
              
              return (
                &lt;div style={{
                  flex: 1,
                  textAlign: 'center',
                  fontSize: 60,
                  opacity: frame / 30
                }}&gt;
                  &lt;h1&gt;Hello Remotion!&lt;/h1&gt;
                  &lt;p&gt;Frame: {frame}&lt;/p&gt;
                &lt;/div&gt;
              );
            };
            
            // AI生成素材を組み込む
            const AIEnhancedVideo = () => {
              const [bgImage] = useState(() =&gt; 
                generateImage("futuristic background")
              );
              const [narration] = useState(() =&gt; 
                generateSpeech("Welcome to our product")
              );
              
              return (
                &lt;Composition
                  id="ai-video"
                  component={VideoComponent}
                  durationInFrames={300}
                  fps={30}
                  width={1920}
                  height={1080}
                /&gt;
              );
            };</code></pre>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">特徴</h2>
            <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px;">
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">⚛️</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">Reactベース</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">慣れ親しんだReactで動画制作</p>
                </div>
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">🚀</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">高速レンダリング</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">Lambda連携でクラウド処理</p>
                </div>
                <div style="background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; margin-bottom: 12px;">🎯</div>
                    <h4 style="font-size: 16px; margin-bottom: 8px;">プログラマブル</h4>
                    <p style="font-size: 14px; color: var(--text-weak);">コードで完全制御可能</p>
                </div>
            </div>
        </div>
        
        <div class="detail-section">
            <h2 class="section-title">GitHub</h2>
            <div class="github-link">
                <a href="https://github.com/kamuicode/mcp-remotion-video" target="_blank" class="github-button">
                    <span>💙 GitHubリポジトリを見る</span>
                </a>
            </div>
        </div>
    </div>

mcp-workflow:
  html: |
    <div class="page-header">
        <h1 class="page-title">MCP ワークフロー</h1>
        <div class="page-divider"></div>
    </div>
    
    <div class="cards-section">
        <div class="cards-grid-3col">
            <div class="card-modern creative" onclick="navigateTo('workflow-creative')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Creative Workflow</h2>
                        <p class="card-subtitle">クリエイティブ自動化</p>
                    </div>
                    <span class="card-tag">🔄 ワークフロー</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Blog to Social Media</span>
                            <span class="code-line">create_blog() → generate_images() → post_sns()</span>
                            <span class="code-comment"># Video Production</span>
                            <span class="code-line">script() → video() → subtitle() → upload()</span>
                            <span class="code-comment"># Content Pipeline</span>
                            <span class="code-line">draft() → enhance() → publish()</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb creative-orb"></div>
            </div>
            
            <div class="card-modern development" onclick="navigateTo('workflow-development')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Development Workflow</h2>
                        <p class="card-subtitle">開発プロセス自動化</p>
                    </div>
                    <span class="card-tag">🔄 ワークフロー</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Requirement to Code</span>
                            <span class="code-line">analyze_req() → generate_code() → test()</span>
                            <span class="code-comment"># CI/CD Pipeline</span>
                            <span class="code-line">commit() → build() → test() → deploy()</span>
                            <span class="code-comment"># Documentation</span>
                            <span class="code-line">code() → generate_docs() → publish()</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb development-orb"></div>
            </div>
            
            <div class="card-modern business" onclick="navigateTo('workflow-business')">
                <div class="card-content">
                    <div class="card-header">
                        <h2 class="card-title">Business Workflow</h2>
                        <p class="card-subtitle">ビジネスプロセス自動化</p>
                    </div>
                    <span class="card-tag">🔄 ワークフロー</span>
                    <div class="card-code-section">
                        <div class="code-snippet">
                            <span class="code-comment"># Proposal Generation</span>
                            <span class="code-line">gather_info() → create_doc() → review()</span>
                            <span class="code-comment"># Report Automation</span>
                            <span class="code-line">collect_data() → analyze() → visualize()</span>
                            <span class="code-comment"># Presentation</span>
                            <span class="code-line">outline() → slides() → narration()</span>
                        </div>
                    </div>
                </div>
                <div class="card-orb business-orb"></div>
            </div>
        </div>
    </div>

workflow-all:
  html: |
    <div class="page-header">
        <h1 class="page-title">ワークフロー一覧</h1>
        <p class="page-subtitle">複数のMCPサーバーを連携させた自動化フロー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="workflow-packages-grid">
        <!-- Blog to SNS Workflow -->
        <div class="package-card workflow-blog-sns" onclick="navigateTo('workflow-blog-sns')">
            <div class="package-header">
                <h3 class="package-title">ブログ → SNS投稿ワークフロー</h3>
                <div class="package-path">/workflow/blog-to-sns.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">ステップ数:</span>
                    <span class="stat-value">5</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">使用サーバー:</span>
                    <span class="stat-value">4</span>
                </div>
            </div>
        </div>
        
        <!-- Video Production Workflow -->
        <div class="package-card workflow-video-prod" onclick="navigateTo('workflow-video-production')">
            <div class="package-header">
                <h3 class="package-title">動画制作ワークフロー</h3>
                <div class="package-path">/workflow/video-production.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">ステップ数:</span>
                    <span class="stat-value">7</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">使用サーバー:</span>
                    <span class="stat-value">6</span>
                </div>
            </div>
        </div>
        
        <!-- Requirements to Code Workflow -->
        <div class="package-card workflow-req-code" onclick="navigateTo('workflow-requirements-code')">
            <div class="package-header">
                <h3 class="package-title">要件定義 → コード生成ワークフロー</h3>
                <div class="package-path">/workflow/requirements-to-code.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">ステップ数:</span>
                    <span class="stat-value">6</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">使用サーバー:</span>
                    <span class="stat-value">5</span>
                </div>
            </div>
        </div>
        
        <!-- Product Launch Workflow -->
        <div class="package-card workflow-product-launch" onclick="navigateTo('workflow-product-launch')">
            <div class="package-header">
                <h3 class="package-title">プロダクトローンチワークフロー</h3>
                <div class="package-path">/workflow/product-launch.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">ステップ数:</span>
                    <span class="stat-value">8</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">使用サーバー:</span>
                    <span class="stat-value">10</span>
                </div>
            </div>
        </div>
        
        <!-- Content Localization Workflow -->
        <div class="package-card workflow-localization" onclick="navigateTo('workflow-content-localization')">
            <div class="package-header">
                <h3 class="package-title">コンテンツローカライズワークフロー</h3>
                <div class="package-path">/workflow/content-localization.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">ステップ数:</span>
                    <span class="stat-value">6</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">使用サーバー:</span>
                    <span class="stat-value">7</span>
                </div>
            </div>
        </div>
        
        <!-- E-Learning Course Workflow -->
        <div class="package-card workflow-elearning" onclick="navigateTo('workflow-elearning-course')">
            <div class="package-header">
                <h3 class="package-title">Eラーニングコース作成ワークフロー</h3>
                <div class="package-path">/workflow/elearning-course.json</div>
            </div>
            <div class="package-stats">
                <div class="stat-item">
                    <span class="stat-label">ステップ数:</span>
                    <span class="stat-value">9</span>
                </div>
                <div class="stat-item">
                    <span class="stat-label">使用サーバー:</span>
                    <span class="stat-value">8</span>
                </div>
            </div>
        </div>
    </div>

workflow-creative:
  html: |
    <div class="page-header">
        <h1 class="page-title">クリエイティブワークフロー</h1>
        <p class="page-subtitle">コンテンツ制作・配信の自動化フロー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="workflow-category-grid">
        <div class="workflow-card" onclick="navigateTo('workflow-blog-sns')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">ブログ → SNS投稿ワークフロー</h3>
                <div class="workflow-card-badge">コンテンツ配信</div>
            </div>
            <p class="workflow-card-description">ブログ記事から自動的に画像を生成し、各SNSプラットフォームに最適化して投稿</p>
            <div class="workflow-card-flow">
                <span>📝 記事作成</span>
                <span>→</span>
                <span>🎨 画像生成</span>
                <span>→</span>
                <span>📱 SNS投稿</span>
            </div>
        </div>
        
        <div class="workflow-card" onclick="navigateTo('workflow-video-production')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">動画制作ワークフロー</h3>
                <div class="workflow-card-badge">動画制作</div>
            </div>
            <p class="workflow-card-description">スクリプトから動画生成、字幕追加、音楽・ナレーション合成まで完全自動化</p>
            <div class="workflow-card-flow">
                <span>📜 台本</span>
                <span>→</span>
                <span>🎬 動画生成</span>
                <span>→</span>
                <span>🎵 音声追加</span>
                <span>→</span>
                <span>📤 配信</span>
            </div>
        </div>
        
        <div class="workflow-card" onclick="navigateTo('workflow-content-localization')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">コンテンツローカライズワークフロー</h3>
                <div class="workflow-card-badge">多言語展開</div>
            </div>
            <p class="workflow-card-description">コンテンツを複数言語に翻訳し、各言語に最適化した画像・動画を生成</p>
            <div class="workflow-card-flow">
                <span>🌐 翻訳</span>
                <span>→</span>
                <span>🖼️ 画像調整</span>
                <span>→</span>
                <span>🗣️ 音声生成</span>
            </div>
        </div>
    </div>

workflow-development:
  html: |
    <div class="page-header">
        <h1 class="page-title">開発ワークフロー</h1>
        <p class="page-subtitle">開発プロセスの自動化フロー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="workflow-category-grid">
        <div class="workflow-card" onclick="navigateTo('workflow-requirements-code')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">要件定義 → コード生成ワークフロー</h3>
                <div class="workflow-card-badge">自動開発</div>
            </div>
            <p class="workflow-card-description">要件定義書から自動的にコードを生成し、テストまで実行する開発自動化</p>
            <div class="workflow-card-flow">
                <span>📋 要件定義</span>
                <span>→</span>
                <span>💻 コード生成</span>
                <span>→</span>
                <span>🧪 テスト</span>
                <span>→</span>
                <span>📦 デプロイ</span>
            </div>
        </div>
        
        <div class="workflow-card" onclick="navigateTo('workflow-documentation')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">ドキュメント自動生成ワークフロー</h3>
                <div class="workflow-card-badge">ドキュメント</div>
            </div>
            <p class="workflow-card-description">コードから自動的にドキュメントを生成し、図表やサンプルコードを追加</p>
            <div class="workflow-card-flow">
                <span>🔍 解析</span>
                <span>→</span>
                <span>📝 文書生成</span>
                <span>→</span>
                <span>📊 図表作成</span>
            </div>
        </div>
        
        <div class="workflow-card" onclick="navigateTo('workflow-testing')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">自動テスト・品質保証ワークフロー</h3>
                <div class="workflow-card-badge">品質保証</div>
            </div>
            <p class="workflow-card-description">コード変更を検知して自動テストを実行し、品質レポートを生成</p>
            <div class="workflow-card-flow">
                <span>🔧 変更検知</span>
                <span>→</span>
                <span>🧪 テスト実行</span>
                <span>→</span>
                <span>📊 レポート</span>
            </div>
        </div>
    </div>

workflow-business:
  html: |
    <div class="page-header">
        <h1 class="page-title">ビジネスワークフロー</h1>
        <p class="page-subtitle">ビジネスプロセスの自動化フロー</p>
        <div class="page-divider"></div>
    </div>
    
    <div class="workflow-category-grid">
        <div class="workflow-card" onclick="navigateTo('workflow-product-launch')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">プロダクトローンチワークフロー</h3>
                <div class="workflow-card-badge">製品リリース</div>
            </div>
            <p class="workflow-card-description">新製品のローンチに必要な全資料を自動生成（プレスリリース、LP、動画など）</p>
            <div class="workflow-card-flow">
                <span>📋 企画</span>
                <span>→</span>
                <span>📄 資料作成</span>
                <span>→</span>
                <span>🎥 動画制作</span>
                <span>→</span>
                <span>🚀 公開</span>
            </div>
        </div>
        
        <div class="workflow-card" onclick="navigateTo('workflow-proposal')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">提案書自動生成ワークフロー</h3>
                <div class="workflow-card-badge">営業支援</div>
            </div>
            <p class="workflow-card-description">顧客情報から最適な提案書を生成し、プレゼン資料まで自動作成</p>
            <div class="workflow-card-flow">
                <span>👤 顧客分析</span>
                <span>→</span>
                <span>📋 提案書</span>
                <span>→</span>
                <span>📊 スライド</span>
            </div>
        </div>
        
        <div class="workflow-card" onclick="navigateTo('workflow-elearning-course')">
            <div class="workflow-card-header">
                <h3 class="workflow-card-title">Eラーニングコース作成ワークフロー</h3>
                <div class="workflow-card-badge">教育コンテンツ</div>
            </div>
            <p class="workflow-card-description">教材から動画講座、クイズ、修了証まで完全な学習コースを自動生成</p>
            <div class="workflow-card-flow">
                <span>📚 教材</span>
                <span>→</span>
                <span>🎬 講座動画</span>
                <span>→</span>
                <span>📝 テスト</span>
                <span>→</span>
                <span>🏆 修了証</span>
            </div>
        </div>
    </div>
